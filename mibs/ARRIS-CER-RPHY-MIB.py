#
# PySNMP MIB module ARRIS-CER-RPHY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://common/mibs/RMD_V03.00.00.0095/mibs/ARRIS-CER-RPHY-MIB.mib
# Produced by pysmi-0.3.4 at Wed May 25 10:21:41 2022
# On host silas-mk8s platform Linux version 5.4.0-109-generic by user labuser
# Using Python version 3.8.10 (default, Mar 15 2022, 12:22:08) 
#
arrisE6Cer, = mibBuilder.importSymbols("ARRIS-MIB", "arrisE6Cer")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
trapSeverity, trapCounter = mibBuilder.importSymbols("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity", "trapCounter")
CadOfdmaDataTemplateIndexType, cadIfUsOfdmaTmpltIndex, cadIfCmtsModIndex = mibBuilder.importSymbols("CADANT-CMTS-UPCHANNEL-MIB", "CadOfdmaDataTemplateIndexType", "cadIfUsOfdmaTmpltIndex", "cadIfCmtsModIndex")
InetAddressIPv4or6, PrimaryState, SecondaryState, DsVidGrpName, AdminState, FirmwareSource = mibBuilder.importSymbols("CADANT-TC", "InetAddressIPv4or6", "PrimaryState", "SecondaryState", "DsVidGrpName", "AdminState", "FirmwareSource")
NodeName, = mibBuilder.importSymbols("CLAB-TOPO-MIB", "NodeName")
X509Certificate, = mibBuilder.importSymbols("DOCS-BPI2-MIB", "X509Certificate")
TenthdBmV, TenthdB = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdBmV", "TenthdB")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, Integer32, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Counter64, iso, MibIdentifier, Gauge32, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Integer32", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Counter64", "iso", "MibIdentifier", "Gauge32", "Counter32", "NotificationType")
MacAddress, DisplayString, TruthValue, PhysAddress, TimeStamp, TextualConvention, RowStatus, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TruthValue", "PhysAddress", "TimeStamp", "TextualConvention", "RowStatus", "DateAndTime")
cerRphyMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9))
cerRphyMib.setRevisions(('2022-04-29 00:00', '2021-06-07 00:00', '2021-04-14 00:00', '2021-03-31 00:00', '2021-01-22 00:00', '2020-12-18 00:00', '2020-11-18 00:00', '2020-10-08 00:00', '2020-09-18 00:00', '2020-08-25 00:00', '2020-07-30 00:00', '2020-07-27 00:00', '2020-07-14 00:00', '2020-07-06 00:00', '2020-07-02 00:00', '2020-06-24 00:00', '2020-03-09 00:00', '2020-02-21 00:00', '2019-09-25 00:00', '2019-09-18 00:00', '2019-09-17 00:00', '2019-09-15 00:00', '2019-09-05 00:00', '2019-08-19 00:00', '2019-08-15 00:00', '2019-08-07 00:00', '2019-08-06 00:00', '2019-07-29 00:00', '2019-07-24 00:00', '2019-06-25 00:00', '2019-06-13 00:00', '2019-06-07 00:00', '2019-05-29 00:00', '2019-05-06 00:00', '2019-04-12 00:00', '2019-04-02 00:00', '2019-02-26 00:00', '2019-01-22 00:00', '2019-01-20 00:00', '2019-01-15 00:00', '2019-01-14 00:00', '2019-01-09 00:00', '2018-12-19 00:00', '2018-11-13 00:00', '2018-11-08 00:00', '2018-09-25 00:00', '2018-09-17 00:00', '2018-08-01 00:00', '2018-07-10 00:00', '2018-05-25 00:00', '2018-03-28 00:00', '2017-10-11 00:00', '2016-01-29 08:00',))
if mibBuilder.loadTexts: cerRphyMib.setLastUpdated('202204290000Z')
if mibBuilder.loadTexts: cerRphyMib.setOrganization('Arris International')
class CerRpdName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class CerRpdIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 511)

class CerRpdIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 511)

class PwOperState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("up", 1), ("down", 2), ("testing", 3), ("dormant", 4), ("notPresent", 5), ("lowerLayerDown", 6))

class PwStatus(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("pwNotForwarding", 0), ("servicePwRxFault", 1), ("servicePwTxFault", 2), ("psnPwRxFault", 3), ("psnPwTxFault", 4))

class PwErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("invalidMACInterfaceValue", 2), ("invalidDSInterfaceValue", 3), ("noResourcesForDSInterfaceIndex", 4), ("l2tpv3Error", 5), ("ifAdminStatusSetToDown", 6))

class PwType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("psp", 0), ("mpt", 1))

class PwSubtype(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))
    namedValues = NamedValues(("mptLegacy", 0), ("mptDepi", 1), ("pspLegacy", 2), ("mcm", 3), ("pspDepiMultichannel", 4), ("reserved", 5), ("pspUepiScQam", 6), ("pspUepiOfdma", 7), ("pspBwReqScQam", 8), ("pspBwReqOfdma", 9), ("pspProbe", 10), ("pspRngReqScQam", 11), ("pspRngReqOfdma", 12), ("pspMapScQam", 13), ("pspMapOfdma", 14), ("pspSpecman", 15), ("pspPnm", 16), ("psp551Fwd", 17), ("psp551Ret", 18), ("psp552Fwd", 19), ("psp552Ret", 20), ("pspNdf", 21), ("pspNdr", 22))

cerRphyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1))
cerRphyEnable = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 1), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphyEnable.setStatus('current')
cerRphyMinMulticastSessionId = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2147483649, 2147549183)).clone(2147483649)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMinMulticastSessionId.setStatus('current')
cerRphyMaxMulticastSessionId = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2147483649, 2147549183)).clone(2147549183)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMaxMulticastSessionId.setStatus('current')
cerRphyLocalEventLogSize = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 50)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyLocalEventLogSize.setStatus('current')
cerRphyHistoryLogSize = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyHistoryLogSize.setStatus('current')
cerRphyL2TPv3Mtu = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1280, 2000)).clone(1982)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyL2TPv3Mtu.setStatus('current')
cerRphyEvThrottleAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unconstrained", 1), ("maintainBelowThreshold", 2), ("stopAtThreshold", 3), ("inhibited", 4))).clone('unconstrained')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyEvThrottleAdminStatus.setStatus('current')
cerRphyEvThrottleThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 8), Unsigned32()).setUnits('events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyEvThrottleThreshold.setStatus('current')
cerRphyEvThrottleInterval = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyEvThrottleInterval.setStatus('current')
cerRphyCoreLoopbackIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyCoreLoopbackIfIndex.setStatus('current')
cerRphyCoreIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 11), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphyCoreIpAddr.setStatus('current')
cerRphyMcastInterface = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMcastInterface.setStatus('current')
cerRphyLowMcastIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 13), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyLowMcastIpAddr.setStatus('current')
cerRphyHighMcastIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 14), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyHighMcastIpAddr.setStatus('current')
cerRphyAllRpdMcastIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 15), InetAddressIPv4or6().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyAllRpdMcastIpAddr.setStatus('current')
cerRphyGcpKeepAliveIntvl = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyGcpKeepAliveIntvl.setStatus('current')
cerRphyGcpKeepAliveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 8)).clone(3)).setUnits('KeepAliveIntervals').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyGcpKeepAliveTimeout.setStatus('current')
cerRphyL2TPv3HelloInterval = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 19), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 300), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyL2TPv3HelloInterval.setStatus('current')
cerRphyRpdJitterBufDepth = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 20), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(40, 40), ValueRangeConstraint(50, 50), )).clone(10)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyRpdJitterBufDepth.setStatus('current')
cerRphyRpdCoreType = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("principal", 1), ("aux", 2))).clone('principal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyRpdCoreType.setStatus('current')
cerRphyMaxSsdAttempts = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMaxSsdAttempts.setStatus('current')
cerRphyRpdPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1440)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyRpdPollInterval.setStatus('current')
cerRphyMcastBackupInterface = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 24), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMcastBackupInterface.setStatus('current')
cerRphyMcastActiveInterface = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 25), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMcastActiveInterface.setStatus('current')
cerRphyMcastRevertToPrimaryInterface = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 26), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyMcastRevertToPrimaryInterface.setStatus('current')
cerRphyL2TPv3RetryCount = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyL2TPv3RetryCount.setStatus('current')
cerRphyL2TPv3ConnectionSetupTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(90)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyL2TPv3ConnectionSetupTimeout.setStatus('current')
cerRphyEnetPortAddrTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 60)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyEnetPortAddrTimeout.setStatus('current')
cerRphyDlmMode = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("measureOnly", 2), ("twoTierAdaptive", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyDlmMode.setStatus('current')
cerRphyIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 1, 31), InetAddressType().clone('ipv6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyIpAddrType.setStatus('current')
cerRpdIndexTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 3), )
if mibBuilder.loadTexts: cerRpdIndexTable.setStatus('current')
cerRpdIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 3, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdIndexRpdIndex"))
if mibBuilder.loadTexts: cerRpdIndexEntry.setStatus('current')
cerRpdIndexRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 3, 1, 1), CerRpdIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cerRpdIndexRpdIndex.setStatus('current')
cerRpdIndexRpdName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 3, 1, 2), CerRpdName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIndexRpdName.setStatus('current')
cerRpdMacAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 4), )
if mibBuilder.loadTexts: cerRpdMacAddrTable.setStatus('current')
cerRpdMacAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 4, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdMacAddr"))
if mibBuilder.loadTexts: cerRpdMacAddrEntry.setStatus('current')
cerRpdMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: cerRpdMacAddr.setStatus('current')
cerRpdMacAddrName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 4, 1, 2), CerRpdName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdMacAddrName.setStatus('current')
cerRpdDsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5), )
if mibBuilder.loadTexts: cerRpdDsRfPortTable.setStatus('current')
cerRpdDsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsRfPortRpdRfPortId"))
if mibBuilder.loadTexts: cerRpdDsRfPortEntry.setStatus('current')
cerRpdDsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDsRfPortRpdIndex.setStatus('current')
cerRpdDsRfPortRpdRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdDsRfPortRpdRfPortId.setStatus('current')
cerRpdDsRfPortBasePower = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 3), TenthdBmV().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(260, 450), )).clone(260)).setUnits('dBmV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdDsRfPortBasePower.setStatus('current')
cerRpdDsRfPortTilt = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 4), TenthdB().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setUnits('TenthdB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdDsRfPortTilt.setStatus('current')
cerRpdDsRfPortTiltMaxFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 5), Unsigned32().clone(1218000000)).setUnits('Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdDsRfPortTiltMaxFreq.setStatus('current')
cerRpdDsRfPortMeasuredPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(260, 450), ))).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsRfPortMeasuredPower.setStatus('current')
cerRpdNameTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6), )
if mibBuilder.loadTexts: cerRpdNameTable.setStatus('current')
cerRpdNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdName"))
if mibBuilder.loadTexts: cerRpdNameEntry.setStatus('current')
cerRpdName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 16)))
if mibBuilder.loadTexts: cerRpdName.setStatus('current')
cerRpdNameRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 2), CerRpdIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameRpdIndex.setStatus('current')
cerRpdNameMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 3), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameMacAddr.setStatus('current')
cerRpdNameDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameDescription.setStatus('current')
cerRpdNameDcamCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 6), ValueRangeConstraint(9, 14), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameDcamCardId.setStatus('current')
cerRpdNameUcamCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 6), ValueRangeConstraint(9, 14), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameUcamCardId.setStatus('current')
cerRpdNameAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 8), AdminState().clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameAdminState.setStatus('current')
cerRpdNameCinLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000)).clone(1600)).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameCinLatency.setStatus('current')
cerRpdNameSsdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameSsdEnable.setStatus('current')
cerRpdNameDtiMapAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(1000)).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameDtiMapAdj.setStatus('current')
cerRpdNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameRowStatus.setStatus('current')
cerRpdNameResetRpd = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("soft", 1), ("hard", 2), ("nvram", 3), ("factory", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameResetRpd.setStatus('current')
cerRpdNameStatusPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameStatusPoll.setStatus('current')
cerRpdNameAdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameAdpEnabled.setStatus('current')
cerRpdNameAdpAutoRevert = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameAdpAutoRevert.setStatus('current')
cerRpdNameAdpHdTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 120)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameAdpHdTimeout.setStatus('current')
cerRpdNameAdpIntervalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameAdpIntervalTime.setStatus('current')
cerRpdNameLcceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleLcce", 1), ("dualLcce", 2))).clone('singleLcce')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdNameLcceMode.setStatus('current')
cerRpdGlobalEvControlTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 7), )
if mibBuilder.loadTexts: cerRpdGlobalEvControlTable.setStatus('current')
cerRpdGlobalEvControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 7, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdGlobalEvPriority"))
if mibBuilder.loadTexts: cerRpdGlobalEvControlEntry.setStatus('current')
cerRpdGlobalEvPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("information", 7), ("debug", 8))))
if mibBuilder.loadTexts: cerRpdGlobalEvPriority.setStatus('current')
cerRpdGlobalEvReporting = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 7, 1, 2), Bits().clone(namedValues=NamedValues(("localVolatile", 0), ("gcpEvent", 1))).clone(namedValues=NamedValues(("localVolatile", 0), ("gcpEvent", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdGlobalEvReporting.setStatus('current')
cerRpdEvControlTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8), )
if mibBuilder.loadTexts: cerRpdEvControlTable.setStatus('current')
cerRpdEvControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdEvRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdEvPriority"))
if mibBuilder.loadTexts: cerRpdEvControlEntry.setStatus('current')
cerRpdEvRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdEvRpdIndex.setStatus('current')
cerRpdEvPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("information", 7), ("debug", 8))))
if mibBuilder.loadTexts: cerRpdEvPriority.setStatus('current')
cerRpdEvReporting = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8, 1, 3), Bits().clone(namedValues=NamedValues(("localVolatile", 0), ("gcpEvent", 1))).clone(namedValues=NamedValues(("localVolatile", 0), ("gcpEvent", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdEvReporting.setStatus('current')
cerRpdEvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdEvRowStatus.setStatus('current')
cerFnDsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9), )
if mibBuilder.loadTexts: cerFnDsRfPortTable.setStatus('current')
cerFnDsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerFnDsRfPortFnName"), (0, "ARRIS-CER-RPHY-MIB", "cerFnDsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerFnDsRfPortRpdPortId"))
if mibBuilder.loadTexts: cerFnDsRfPortEntry.setStatus('current')
cerFnDsRfPortFnName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9, 1, 1), NodeName())
if mibBuilder.loadTexts: cerFnDsRfPortFnName.setStatus('current')
cerFnDsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerFnDsRfPortRpdIndex.setStatus('current')
cerFnDsRfPortRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerFnDsRfPortRpdPortId.setStatus('current')
cerFnDsRfPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerFnDsRfPortRowStatus.setStatus('current')
cerVideoRpdDsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10), )
if mibBuilder.loadTexts: cerVideoRpdDsRfPortTable.setStatus('current')
cerVideoRpdDsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerVideoRpdDsRfPortRpdGrpName"), (0, "ARRIS-CER-RPHY-MIB", "cerVideoRpdDsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerVideoRpdDsRfPortRpdPortId"))
if mibBuilder.loadTexts: cerVideoRpdDsRfPortEntry.setStatus('current')
cerVideoRpdDsRfPortRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10, 1, 1), DsVidGrpName())
if mibBuilder.loadTexts: cerVideoRpdDsRfPortRpdGrpName.setStatus('current')
cerVideoRpdDsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10, 1, 2), CerRpdIndexOrZero())
if mibBuilder.loadTexts: cerVideoRpdDsRfPortRpdIndex.setStatus('current')
cerVideoRpdDsRfPortRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: cerVideoRpdDsRfPortRpdPortId.setStatus('current')
cerVideoRpdDsRfPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerVideoRpdDsRfPortRowStatus.setStatus('current')
cerFnUsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11), )
if mibBuilder.loadTexts: cerFnUsRfPortTable.setStatus('current')
cerFnUsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerFnUsRfPortFnName"), (0, "ARRIS-CER-RPHY-MIB", "cerFnUsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerFnUsRfPortRpdPortId"))
if mibBuilder.loadTexts: cerFnUsRfPortEntry.setStatus('current')
cerFnUsRfPortFnName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11, 1, 1), NodeName())
if mibBuilder.loadTexts: cerFnUsRfPortFnName.setStatus('current')
cerFnUsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerFnUsRfPortRpdIndex.setStatus('current')
cerFnUsRfPortRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerFnUsRfPortRpdPortId.setStatus('current')
cerFnUsRfPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerFnUsRfPortRowStatus.setStatus('current')
cerRpdDsScQamTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14), )
if mibBuilder.loadTexts: cerRpdDsScQamTable.setStatus('current')
cerRpdDsScQamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsScQamRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsScQamRpdChanIfIndex"))
if mibBuilder.loadTexts: cerRpdDsScQamEntry.setStatus('current')
cerRpdDsScQamRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDsScQamRpdIndex.setStatus('current')
cerRpdDsScQamRpdChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdDsScQamRpdChanIfIndex.setStatus('current')
cerRpdDsScQamCoreChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsScQamCoreChanIfIndex.setStatus('current')
cerRpdDsScQamRpdChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsScQamRpdChanSelector.setStatus('current')
cerRpdDsScQamRpdDepiChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsScQamRpdDepiChanId.setStatus('current')
cerRpdDsScQamDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsScQamDataPwId.setStatus('current')
cerRpdDsOfdmChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15), )
if mibBuilder.loadTexts: cerRpdDsOfdmChanTable.setStatus('current')
cerRpdDsOfdmChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsOfdmChanRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsOfdmChanRpdChanIfIndex"))
if mibBuilder.loadTexts: cerRpdDsOfdmChanEntry.setStatus('current')
cerRpdDsOfdmChanRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDsOfdmChanRpdIndex.setStatus('current')
cerRpdDsOfdmChanRpdChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdDsOfdmChanRpdChanIfIndex.setStatus('current')
cerRpdDsOfdmChanCoreChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsOfdmChanCoreChanIfIndex.setStatus('current')
cerRpdDsOfdmChanRpdChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsOfdmChanRpdChanSelector.setStatus('current')
cerRpdDsOfdmChanRpdDepiChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsOfdmChanRpdDepiChanId.setStatus('current')
cerRpdDsOfdmChanDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsOfdmChanDataPwId.setStatus('current')
cerRpdDsOfdmChanRpdPlcChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 15, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsOfdmChanRpdPlcChanSelector.setStatus('current')
cerRpdUsChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17), )
if mibBuilder.loadTexts: cerRpdUsChanTable.setStatus('current')
cerRpdUsChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdUsChanRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdUsChanRpdChanIfIndex"))
if mibBuilder.loadTexts: cerRpdUsChanEntry.setStatus('current')
cerRpdUsChanRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdUsChanRpdIndex.setStatus('current')
cerRpdUsChanRpdChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdUsChanRpdChanIfIndex.setStatus('current')
cerRpdUsChanCoreChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsChanCoreChanIfIndex.setStatus('current')
cerRpdUsChanRpdChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsChanRpdChanSelector.setStatus('current')
cerRpdUsChanDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 17, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsChanDataPwId.setStatus('current')
cerCoreChanToRpdChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18), )
if mibBuilder.loadTexts: cerCoreChanToRpdChanTable.setStatus('current')
cerCoreChanToRpdChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerCoreChanToRpdChanCoreIfIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerCoreChanToRpdChanRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerCoreChanToRpdChanRpdRfPort"))
if mibBuilder.loadTexts: cerCoreChanToRpdChanEntry.setStatus('current')
cerCoreChanToRpdChanCoreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerCoreChanToRpdChanCoreIfIndex.setStatus('current')
cerCoreChanToRpdChanRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerCoreChanToRpdChanRpdIndex.setStatus('current')
cerCoreChanToRpdChanRpdRfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerCoreChanToRpdChanRpdRfPort.setStatus('current')
cerCoreChanToRpdChanRpdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerCoreChanToRpdChanRpdIfIndex.setStatus('current')
cerCoreChanToRpdChanDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerCoreChanToRpdChanDirection.setStatus('current')
cerRpdToCoreChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19), )
if mibBuilder.loadTexts: cerRpdToCoreChanTable.setStatus('current')
cerRpdToCoreChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdToCoreChanRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdToCoreChanRpdRfPort"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdToCoreChanRpdIfIndex"))
if mibBuilder.loadTexts: cerRpdToCoreChanEntry.setStatus('current')
cerRpdToCoreChanRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdToCoreChanRpdIndex.setStatus('current')
cerRpdToCoreChanRpdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdToCoreChanRpdIfIndex.setStatus('current')
cerRpdToCoreChanCoreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdToCoreChanCoreIfIndex.setStatus('current')
cerRpdToCoreChanRpdRfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdToCoreChanRpdRfPort.setStatus('current')
cerRpdToCoreChanDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdToCoreChanDirection.setStatus('current')
cerRphyDscpTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 20), )
if mibBuilder.loadTexts: cerRphyDscpTable.setStatus('current')
cerRphyDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 20, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyDscpPktType"))
if mibBuilder.loadTexts: cerRphyDscpEntry.setStatus('current')
cerRphyDscpPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("rpdCntl", 1), ("mapUcds", 2), ("dsDataPws", 3), ("usBwReqPws", 4), ("usDataPws", 5), ("ptp", 6), ("ndr", 7), ("video", 8), ("broadcast", 9))))
if mibBuilder.loadTexts: cerRphyDscpPktType.setStatus('current')
cerRphyDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphyDscpValue.setStatus('current')
cerRpdIfTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21), )
if mibBuilder.loadTexts: cerRpdIfTable.setStatus('current')
cerRpdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdIfIndex"))
if mibBuilder.loadTexts: cerRpdIfEntry.setStatus('current')
cerRpdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdIfIndex.setStatus('current')
cerRpdIfRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 2), CerRpdIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfRpdIndex.setStatus('current')
cerRpdIfRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfRfPortId.setStatus('current')
cerRpdIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 4), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfType.setStatus('current')
cerRpdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfMtu.setStatus('current')
cerRpdIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7))).clone('notPresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfOperStatus.setStatus('current')
cerRpdIfLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfLastChange.setStatus('current')
cerRpdIfDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfDiscards.setStatus('current')
cerRpdIfErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfErrors.setStatus('current')
cerRpdIfCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 21, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdIfCounterDiscontinuityTime.setStatus('current')
cerRpdDsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22), )
if mibBuilder.loadTexts: cerRpdDsStatsTable.setStatus('current')
cerRpdDsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsStatsIfIndex"))
if mibBuilder.loadTexts: cerRpdDsStatsEntry.setStatus('current')
cerRpdDsStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdDsStatsIfIndex.setStatus('current')
cerRpdDsStatsRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22, 1, 2), CerRpdIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsStatsRpdIndex.setStatus('current')
cerRpdDsStatsRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsStatsRfPortId.setStatus('current')
cerRpdDsStatsPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 22, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDsStatsPktsOut.setStatus('current')
cerRpdDataTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23), )
if mibBuilder.loadTexts: cerRpdDataTable.setStatus('current')
cerRpdDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDataRpdIndex"))
if mibBuilder.loadTexts: cerRpdDataEntry.setStatus('current')
cerRpdDataRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDataRpdIndex.setStatus('current')
cerRpdDataIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 2), InetAddressType().clone('ipv6')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataIpAddrType.setStatus('current')
cerRpdDataIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 3), InetAddressIPv4or6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataIpAddr.setStatus('current')
cerRpdDataSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSysUpTime.setStatus('current')
cerRpdDataNumDsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataNumDsPorts.setStatus('current')
cerRpdDataNumUsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataNumUsPorts.setStatus('current')
cerRpdDataPrState = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 7), PrimaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPrState.setStatus('current')
cerRpdDataSecState = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 8), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSecState.setStatus('current')
cerRpdDataSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSerialNum.setStatus('current')
cerRpdDataVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('ARRIS')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataVendorName.setStatus('current')
cerRpdDataVendorOid = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(4115)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataVendorOid.setStatus('current')
cerRpdDataModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataModelNumber.setStatus('current')
cerRpdDataMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataMacAddr.setStatus('current')
cerRpdDataBootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataBootVersion.setStatus('current')
cerRpdDataSsdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("idle", 2), ("inProgress", 3), ("cvcVerified", 4), ("cvcRejected", 5), ("cdeFileVerified", 6), ("codeFileRejected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSsdStatus.setStatus('current')
cerRpdDataHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataHwVersion.setStatus('current')
cerRpdDataSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSwVersion.setStatus('current')
cerRpdDataDeviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDeviceDescription.setStatus('current')
cerRpdDataAssetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataAssetId.setStatus('current')
cerRpdDataLastResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataLastResetReason.setStatus('current')
cerRpdDataDevIdUsBurstRcvrVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDevIdUsBurstRcvrVendorId.setStatus('current')
cerRpdDataDevIdUsBurstRcvrModelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDevIdUsBurstRcvrModelNum.setStatus('current')
cerRpdDataDevIdUsBurstRcvrDrivVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDevIdUsBurstRcvrDrivVer.setStatus('current')
cerRpdDataDevIdUsBurstRcvrSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(5, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDevIdUsBurstRcvrSerialNum.setStatus('current')
cerRpdDataGcpProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 27), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 32)).clone('1.0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataGcpProtocolVersion.setStatus('current')
cerRpdDataGcpSchemaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 28), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(5, 32)).clone('1.0.1')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataGcpSchemaVersion.setStatus('current')
cerRpdDataLocationDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 29), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataLocationDescription.setStatus('current')
cerRpdDataLocationLatitude = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 30), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataLocationLatitude.setStatus('current')
cerRpdDataLocationLongitude = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 31), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataLocationLongitude.setStatus('current')
cerRpdDataCurrentSwImageLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 32), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataCurrentSwImageLastUpdate.setStatus('current')
cerRpdDataCurrentSwImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 33), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataCurrentSwImageName.setStatus('current')
cerRpdDataCurrentSwImageServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 34), InetAddressType().clone('ipv6')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataCurrentSwImageServerType.setStatus('current')
cerRpdDataCurrentSwImageServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 35), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataCurrentSwImageServerAddress.setStatus('current')
cerRpdDataSsdAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSsdAttempts.setStatus('current')
cerRpdDataSsdTargetImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSsdTargetImageName.setStatus('current')
cerRpdDataNumCrashFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataNumCrashFiles.setStatus('current')
cerRpdDataLastStatusReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 39), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataLastStatusReadTime.setStatus('current')
cerRpdDataDeviceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 40), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataDeviceAlias.setStatus('current')
cerRpdDataInitState = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notConnected", 1), ("gcpConnected", 2), ("waitingForPtpSync", 3), ("ptpSyncDuringInit", 4), ("initialized", 5))).clone('notConnected')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataInitState.setStatus('current')
cerRpdDataShelfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 42), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataShelfSerialNumber.setStatus('current')
cerRpdDataSupportsAdp = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 43), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataSupportsAdp.setStatus('current')
cerRpdDataAdpNonOptimal = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 44), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataAdpNonOptimal.setStatus('current')
cerRpdDataAdpSavedPreferredPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unset", 0), ("port0", 1), ("port1", 2))).clone('unset')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataAdpSavedPreferredPort.setStatus('current')
cerRpdDataAdpForward = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 46), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataAdpForward.setStatus('current')
cerRpdDataPnmCapabSupportedPnmTests = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 47), Bits().clone(namedValues=NamedValues(("aqprobes", 0), ("rxmer", 1), ("impnoisestats", 2), ("dssymbolcapture", 3), ("histogram", 4))).clone(hexValue="F8")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabSupportedPnmTests.setStatus('current')
cerRpdDataPnmCapabUtscNumSacs = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUtscNumSacs.setStatus('current')
cerRpdDataPnmCapabUpcMinNumSymbols25Khz = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcMinNumSymbols25Khz.setStatus('current')
cerRpdDataPnmCapabUpcMaxNumSymbols25Khz = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcMaxNumSymbols25Khz.setStatus('current')
cerRpdDataPnmCapabUpcMinNumSymbols50Khz = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcMinNumSymbols50Khz.setStatus('current')
cerRpdDataPnmCapabUpcMaxNumSymbols50Khz = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcMaxNumSymbols50Khz.setStatus('current')
cerRpdDataPnmCapabUpcSupportsStaggeredPies = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 53), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcSupportsStaggeredPies.setStatus('current')
cerRpdDatadPnmCapabUpcSupportsDedicatedPwUpcRxMer = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 54), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDatadPnmCapabUpcSupportsDedicatedPwUpcRxMer.setStatus('current')
cerRpdDataPnmCapabUpcSupportsFreqDomainSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 23, 1, 55), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdDataPnmCapabUpcSupportsFreqDomainSamples.setStatus('current')
cerL2Tpv3TunnelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24), )
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoTable.setStatus('current')
cerL2Tpv3TunnelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerL2Tpv3TunnelInfoRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerL2Tpv3TunnelInfoCoreCCID"))
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoEntry.setStatus('current')
cerL2Tpv3TunnelInfoRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdIndex.setStatus('current')
cerL2Tpv3TunnelInfoCoreCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoCoreCCID.setStatus('current')
cerL2Tpv3TunnelInfoRpdCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdCCID.setStatus('current')
cerL2Tpv3TunnelInfoIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoIpAddrType.setStatus('current')
cerL2Tpv3TunnelInfoRpdLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 5), InetAddressIPv4or6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdLcceIpAddr.setStatus('current')
cerL2Tpv3TunnelInfoUnknownPwPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoUnknownPwPkts.setStatus('current')
cerL2Tpv3TunnelInfoRpdUnknownPwPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdUnknownPwPkts.setStatus('current')
cerL2Tpv3TunnelInfoRpdEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdEnetPortIndex.setStatus('current')
cerL2Tpv3TunnelInfoRpdEnetPortGcp = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 24, 1, 9), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerL2Tpv3TunnelInfoRpdEnetPortGcp.setStatus('current')
cerRpdL2Tpv3TunnelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25), )
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoTable.setStatus('current')
cerRpdL2Tpv3TunnelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdL2Tpv3TunnelInfoRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdL2Tpv3TunnelInfoRpdCCID"))
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoEntry.setStatus('current')
cerRpdL2Tpv3TunnelInfoRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoRpdIndex.setStatus('current')
cerRpdL2Tpv3TunnelInfoRpdCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoRpdCCID.setStatus('current')
cerRpdL2Tpv3TunnelInfoCoreCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoCoreCCID.setStatus('current')
cerRpdL2Tpv3TunnelInfoIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoIpAddrType.setStatus('current')
cerRpdL2Tpv3TunnelInfoCoreIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 5), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoCoreIpAddr.setStatus('current')
cerRpdL2Tpv3TunnelInfoUnknownPwPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 25, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdL2Tpv3TunnelInfoUnknownPwPkts.setStatus('current')
cerRphySessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26), )
if mibBuilder.loadTexts: cerRphySessionInfoTable.setStatus('current')
cerRphySessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphySessionInfoIpAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerRphySessionInfoCoreLcceIpAddr"), (0, "ARRIS-CER-RPHY-MIB", "cerRphySessionInfoRpdLcceIpAddr"), (0, "ARRIS-CER-RPHY-MIB", "cerRphySessionInfoDirection"), (0, "ARRIS-CER-RPHY-MIB", "cerRphySessionInfoSessionId"))
if mibBuilder.loadTexts: cerRphySessionInfoEntry.setStatus('current')
cerRphySessionInfoRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 1), CerRpdIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoRpdIndex.setStatus('current')
cerRphySessionInfoSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cerRphySessionInfoSessionId.setStatus('current')
cerRphySessionInfoRpdSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoRpdSessionId.setStatus('current')
cerRphySessionInfoCoreCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoCoreCCID.setStatus('current')
cerRphySessionInfoSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 5), PwType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoSessionType.setStatus('current')
cerRphySessionInfoSessionSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 6), PwSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoSessionSubtype.setStatus('current')
cerRphySessionInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 7), PwOperState().clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoOperStatus.setStatus('current')
cerRphySessionInfoPwStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 8), PwStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoPwStatus.setStatus('current')
cerRphySessionInfoErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 9), PwErrorCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoErrorCode.setStatus('current')
cerRphySessionInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoCreationTime.setStatus('current')
cerRphySessionInfoLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoLastChangeTime.setStatus('current')
cerRphySessionInfoOutOfSeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoOutOfSeqPkts.setStatus('current')
cerRphySessionInfoIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 13), InetAddressType())
if mibBuilder.loadTexts: cerRphySessionInfoIpAddrType.setStatus('current')
cerRphySessionInfoEffectiveMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphySessionInfoEffectiveMtu.setStatus('current')
cerRphySessionInfoDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forward", 0), ("return", 1))))
if mibBuilder.loadTexts: cerRphySessionInfoDirection.setStatus('current')
cerRphySessionInfoRpdLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 16), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRphySessionInfoRpdLcceIpAddr.setStatus('current')
cerRphySessionInfoCoreLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 17), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRphySessionInfoCoreLcceIpAddr.setStatus('current')
cerRphySessionInfoChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 26, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16))).clone(namedValues=NamedValues(("reserved", 0), ("dsOfdm", 1), ("dsOfdmPlc", 2), ("dsScqam", 3), ("usAtdma", 4), ("usOfdma", 5), ("scte551Fwd", 6), ("scte551Ret", 7), ("scte552Fwd", 8), ("scte552Ret", 9), ("ndf", 10), ("ndr", 11), ("pnmUtscSac", 12), ("dtpComm", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRphySessionInfoChanType.setStatus('current')
cerRpdSessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27), )
if mibBuilder.loadTexts: cerRpdSessionInfoTable.setStatus('current')
cerRpdSessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoIpAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoCoreLcceIpAddr"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoRpdLcceIpAddr"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoDirection"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSessionInfoRpdSessionId"))
if mibBuilder.loadTexts: cerRpdSessionInfoEntry.setStatus('current')
cerRpdSessionInfoRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdSessionInfoRpdIndex.setStatus('current')
cerRpdSessionInfoRpdSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoRpdSessionId.setStatus('current')
cerRpdSessionInfoRpdCCID = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoRpdCCID.setStatus('current')
cerRpdSessionInfoSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 4), PwType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoSessionType.setStatus('current')
cerRpdSessionInfoSessionSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 5), PwSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoSessionSubtype.setStatus('current')
cerRpdSessionInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 6), PwOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoOperStatus.setStatus('current')
cerRpdSessionInfoPwStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 7), PwStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoPwStatus.setStatus('current')
cerRpdSessionInfoErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 8), PwErrorCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoErrorCode.setStatus('current')
cerRpdSessionInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoCreationTime.setStatus('current')
cerRpdSessionInfoLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoLastChangeTime.setStatus('current')
cerRpdSessionInfoOutOfSeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoOutOfSeqPkts.setStatus('current')
cerRpdSessionInfoCoreSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cerRpdSessionInfoCoreSessionId.setStatus('current')
cerRpdSessionInfoDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forward", 0), ("return", 1))))
if mibBuilder.loadTexts: cerRpdSessionInfoDirection.setStatus('current')
cerRpdSessionInfoIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 14), InetAddressType())
if mibBuilder.loadTexts: cerRpdSessionInfoIpAddrType.setStatus('current')
cerRpdSessionInfoRpdLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 15), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRpdSessionInfoRpdLcceIpAddr.setStatus('current')
cerRpdSessionInfoCoreLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 16), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRpdSessionInfoCoreLcceIpAddr.setStatus('current')
cerRpdSessionInfoCoreIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 17), InetAddressIPv4or6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoCoreIpAddr.setStatus('current')
cerRpdSessionInfoRpdMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoRpdMtu.setStatus('current')
cerRpdSessionInfoEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 27, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSessionInfoEnetPortIndex.setStatus('current')
cerRpdChanSelectorTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29), )
if mibBuilder.loadTexts: cerRpdChanSelectorTable.setStatus('current')
cerRpdChanSelectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdChanSelectorRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdChanSelectorValue"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdChanSelectorDataPwId"))
if mibBuilder.loadTexts: cerRpdChanSelectorEntry.setStatus('current')
cerRpdChanSelectorRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdChanSelectorRpdIndex.setStatus('current')
cerRpdChanSelectorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cerRpdChanSelectorValue.setStatus('current')
cerRpdChanSelectorDepiChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanSelectorDepiChanId.setStatus('current')
cerRpdChanSelectorDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 4), Unsigned32())
if mibBuilder.loadTexts: cerRpdChanSelectorDataPwId.setStatus('current')
cerRpdChanSelectorPhyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanSelectorPhyIfIndex.setStatus('current')
cerRpdChanSelectorMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanSelectorMacIfIndex.setStatus('current')
cerRpdChanSelectorPwSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 29, 1, 7), PwSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanSelectorPwSubType.setStatus('current')
cerOob551DsAddrToChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32), )
if mibBuilder.loadTexts: cerOob551DsAddrToChanTable.setStatus('current')
cerOob551DsAddrToChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerOob551DsAddrToChanAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerOob551DsAddrToChanDestIpAddr"), (0, "ARRIS-CER-RPHY-MIB", "cerOob551DsAddrToChanDestUdpPort"))
if mibBuilder.loadTexts: cerOob551DsAddrToChanEntry.setStatus('current')
cerOob551DsAddrToChanAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1, 1), InetAddressType().clone('ipv4'))
if mibBuilder.loadTexts: cerOob551DsAddrToChanAddrType.setStatus('current')
cerOob551DsAddrToChanDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1, 2), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerOob551DsAddrToChanDestIpAddr.setStatus('current')
cerOob551DsAddrToChanDestUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: cerOob551DsAddrToChanDestUdpPort.setStatus('current')
cerOob551DsAddrToChanDsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerOob551DsAddrToChanDsIfIndex.setStatus('current')
cerOob551DsAddrToChanOmIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 32, 1, 5), InetAddressIPv4or6()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerOob551DsAddrToChanOmIpAddr.setStatus('current')
cerOobRpdUsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37), )
if mibBuilder.loadTexts: cerOobRpdUsRfPortTable.setStatus('current')
cerOobRpdUsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerOobRpdUsRfPortRpdGrpName"), (0, "ARRIS-CER-RPHY-MIB", "cerOobRpdUsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerOobRpdUsRfPortRpdPortId"))
if mibBuilder.loadTexts: cerOobRpdUsRfPortEntry.setStatus('current')
cerOobRpdUsRfPortRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37, 1, 1), NodeName())
if mibBuilder.loadTexts: cerOobRpdUsRfPortRpdGrpName.setStatus('current')
cerOobRpdUsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerOobRpdUsRfPortRpdIndex.setStatus('current')
cerOobRpdUsRfPortRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerOobRpdUsRfPortRpdPortId.setStatus('current')
cerOobRpdUsRfPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 37, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerOobRpdUsRfPortRowStatus.setStatus('current')
cerRpdDsExclTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40), )
if mibBuilder.loadTexts: cerRpdDsExclTable.setStatus('current')
cerRpdDsExclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsExclRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsExclRpdRfPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsExclLowFreq"))
if mibBuilder.loadTexts: cerRpdDsExclEntry.setStatus('current')
cerRpdDsExclRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDsExclRpdIndex.setStatus('current')
cerRpdDsExclRpdRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdDsExclRpdRfPortId.setStatus('current')
cerRpdDsExclLowFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(108000000, 1217000000))).setUnits('Hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDsExclLowFreq.setStatus('current')
cerRpdDsExclHighFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(109000000, 1218000000))).setUnits('Hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDsExclHighFreq.setStatus('current')
cerRpdDsExclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 40, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDsExclRowStatus.setStatus('current')
cerRpdUsExclTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41), )
if mibBuilder.loadTexts: cerRpdUsExclTable.setStatus('current')
cerRpdUsExclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdUsExclRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdUsExclRpdRfPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdUsExclLowFreq"))
if mibBuilder.loadTexts: cerRpdUsExclEntry.setStatus('current')
cerRpdUsExclRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdUsExclRpdIndex.setStatus('current')
cerRpdUsExclRpdRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdUsExclRpdRfPortId.setStatus('current')
cerRpdUsExclLowFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000000, 204000000))).setUnits('Hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsExclLowFreq.setStatus('current')
cerRpdUsExclHighFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000000, 204000000))).setUnits('Hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsExclHighFreq.setStatus('current')
cerRpdUsExclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 41, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsExclRowStatus.setStatus('current')
cerRphyVspTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42), )
if mibBuilder.loadTexts: cerRphyVspTable.setStatus('current')
cerRphyVspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyVspVendorOid"))
if mibBuilder.loadTexts: cerRphyVspEntry.setStatus('current')
cerRphyVspVendorOid = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: cerRphyVspVendorOid.setStatus('current')
cerRphyVspSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyVspSelector.setStatus('current')
cerRphyVspSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyVspSetting.setStatus('current')
cerRphyVspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 42, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyVspRowStatus.setStatus('current')
cerRphyCwToneTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43), )
if mibBuilder.loadTexts: cerRphyCwToneTable.setStatus('current')
cerRphyCwToneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyCwToneFreq"))
if mibBuilder.loadTexts: cerRphyCwToneEntry.setStatus('current')
cerRphyCwToneFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5000000, 1218000000))).setUnits('Hertz')
if mibBuilder.loadTexts: cerRphyCwToneFreq.setStatus('current')
cerRphyCwTonePowerAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43, 1, 2), TenthdB()).setUnits('TenthdB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyCwTonePowerAdj.setStatus('current')
cerRphyCwToneUsesDedicatedGen = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43, 1, 3), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphyCwToneUsesDedicatedGen.setStatus('current')
cerRphyCwToneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 43, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyCwToneRowStatus.setStatus('current')
cerRpdCwToneTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44), )
if mibBuilder.loadTexts: cerRpdCwToneTable.setStatus('current')
cerRpdCwToneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdCwToneRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdCwToneRfPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdCwToneFreq"))
if mibBuilder.loadTexts: cerRpdCwToneEntry.setStatus('current')
cerRpdCwToneRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdCwToneRpdIndex.setStatus('current')
cerRpdCwToneRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdCwToneRfPortId.setStatus('current')
cerRpdCwToneFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(54000000, 1218000000))).setUnits('Hertz')
if mibBuilder.loadTexts: cerRpdCwToneFreq.setStatus('current')
cerRpdCwTonePowerAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 4), TenthdB()).setUnits('TenthdB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdCwTonePowerAdj.setStatus('current')
cerRpdCwToneUsesDedicatedGen = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 5), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdCwToneUsesDedicatedGen.setStatus('current')
cerRpdCwToneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 44, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdCwToneRowStatus.setStatus('current')
cerRphyStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 45))
cerRphyLocalConfigFilePresent = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 45, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphyLocalConfigFilePresent.setStatus('current')
cerRphyConfigFileProcessingStatus = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 45, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("processedNoErrors", 1), ("processedWithErrors", 2), ("notProcessed", 3))).clone('notProcessed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRphyConfigFileProcessingStatus.setStatus('current')
cerRpdChanImpairedTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46), )
if mibBuilder.loadTexts: cerRpdChanImpairedTable.setStatus('current')
cerRpdChanImpairedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdChanImpairedIfIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdChanImpairedRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdChanImpairedRfPortId"))
if mibBuilder.loadTexts: cerRpdChanImpairedEntry.setStatus('current')
cerRpdChanImpairedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdChanImpairedIfIndex.setStatus('current')
cerRpdChanImpairedRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdChanImpairedRpdIndex.setStatus('current')
cerRpdChanImpairedRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdChanImpairedRfPortId.setStatus('current')
cerRpdChanImpairedRpdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanImpairedRpdIfIndex.setStatus('current')
cerRpdChanImpairedTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 46, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdChanImpairedTimestamp.setStatus('current')
cerRphyAuxCoreTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47), )
if mibBuilder.loadTexts: cerRphyAuxCoreTable.setStatus('current')
cerRphyAuxCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyAuxCoreAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerRphyAuxCoreIpAddr"))
if mibBuilder.loadTexts: cerRphyAuxCoreEntry.setStatus('current')
cerRphyAuxCoreAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cerRphyAuxCoreAddrType.setStatus('current')
cerRphyAuxCoreIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47, 1, 2), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRphyAuxCoreIpAddr.setStatus('current')
cerRphyAuxCoreDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyAuxCoreDescription.setStatus('current')
cerRphyAuxCoreRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 47, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyAuxCoreRowStatus.setStatus('current')
cerRpdAuxCoreStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48), )
if mibBuilder.loadTexts: cerRpdAuxCoreStatusTable.setStatus('current')
cerRpdAuxCoreStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusIpAddr"))
if mibBuilder.loadTexts: cerRpdAuxCoreStatusEntry.setStatus('current')
cerRpdAuxCoreStatusRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdAuxCoreStatusRpdIndex.setStatus('current')
cerRpdAuxCoreStatusAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cerRpdAuxCoreStatusAddrType.setStatus('current')
cerRpdAuxCoreStatusIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1, 3), InetAddressIPv4or6()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cerRpdAuxCoreStatusIpAddr.setStatus('current')
cerRpdAuxCoreStatusResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("operational", 1), ("corenotactive", 2), ("failure", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAuxCoreStatusResult.setStatus('current')
cerRpdAuxCoreStatusFailureType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 48, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20))).clone(namedValues=NamedValues(("none", 0), ("authentication", 1), ("otherActivePrincipalCore", 2), ("waitIraRetriesExceeded", 3), ("waitConfigRetriesExceeded", 4), ("initTcpConnFail", 5), ("generalTcpFail", 6), ("gcpKeepaliveTimeout", 7), ("waitOperRetriesExceeded", 8), ("initialConfigRetriesExceeded", 9), ("auxCoreConfigFail", 20))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAuxCoreStatusFailureType.setStatus('current')
cerDsGrpToPwMcastAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49), )
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrTable.setStatus('current')
cerDsGrpToPwMcastAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerDsGrpToPwMcastAddrRpdGrpName"))
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrEntry.setStatus('current')
cerDsGrpToPwMcastAddrRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49, 1, 3), DsVidGrpName())
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrRpdGrpName.setStatus('current')
cerDsGrpToPwMcastAddrIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49, 1, 1), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrIpAddrType.setStatus('current')
cerDsGrpToPwMcastAddrPwMcastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49, 1, 2), InetAddressIPv4or6()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrPwMcastIpAddr.setStatus('current')
cerDsGrpToPwMcastAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 49, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerDsGrpToPwMcastAddrRowStatus.setStatus('current')
cerDsRfPortFnTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 50), )
if mibBuilder.loadTexts: cerDsRfPortFnTable.setStatus('current')
cerDsRfPortFnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 50, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortFnRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortFnRpdPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortFnFnName"))
if mibBuilder.loadTexts: cerDsRfPortFnEntry.setStatus('current')
cerDsRfPortFnRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 50, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerDsRfPortFnRpdIndex.setStatus('current')
cerDsRfPortFnRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 50, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerDsRfPortFnRpdPortId.setStatus('current')
cerDsRfPortFnFnName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 50, 1, 3), NodeName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerDsRfPortFnFnName.setStatus('current')
cerDsRfPortVideoTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 51), )
if mibBuilder.loadTexts: cerDsRfPortVideoTable.setStatus('current')
cerDsRfPortVideoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 51, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortVideoRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortVideoRpdPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerDsRfPortVideoGrpName"))
if mibBuilder.loadTexts: cerDsRfPortVideoEntry.setStatus('current')
cerDsRfPortVideoRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 51, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerDsRfPortVideoRpdIndex.setStatus('current')
cerDsRfPortVideoRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 51, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerDsRfPortVideoRpdPortId.setStatus('current')
cerDsRfPortVideoGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 51, 1, 3), DsVidGrpName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerDsRfPortVideoGrpName.setStatus('current')
cerUsRfPortFnTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 52), )
if mibBuilder.loadTexts: cerUsRfPortFnTable.setStatus('current')
cerUsRfPortFnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 52, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerUsRfPortFnRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerUsRfPortFnRpdPortId"), (0, "ARRIS-CER-RPHY-MIB", "cerUsRfPortFnFnName"))
if mibBuilder.loadTexts: cerUsRfPortFnEntry.setStatus('current')
cerUsRfPortFnRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 52, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerUsRfPortFnRpdIndex.setStatus('current')
cerUsRfPortFnRpdPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 52, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerUsRfPortFnRpdPortId.setStatus('current')
cerUsRfPortFnFnName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 52, 1, 3), NodeName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerUsRfPortFnFnName.setStatus('current')
cerRphyTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 70, 0))
cerRphyTrapsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 85))
cerUnknownRpdMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 85, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cerUnknownRpdMacAddr.setStatus('current')
cerUnknownRpdIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 85, 2), InetAddressIPv4or6()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cerUnknownRpdIpAddr.setStatus('current')
cerRphyAuxCoreFailure = NotificationType((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 70, 0, 1)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("ARRIS-CER-RPHY-MIB", "cerRpdIndexRpdIndex"), ("ARRIS-CER-RPHY-MIB", "cerRpdIndexRpdName"), ("ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusAddrType"), ("ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusIpAddr"), ("ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreStatusFailureType"))
if mibBuilder.loadTexts: cerRphyAuxCoreFailure.setStatus('current')
cerRphyLocalConfigFileSaved = NotificationType((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 70, 0, 2)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"))
if mibBuilder.loadTexts: cerRphyLocalConfigFileSaved.setStatus('current')
cerRphyLocalConfigFileErased = NotificationType((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 70, 0, 3)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"))
if mibBuilder.loadTexts: cerRphyLocalConfigFileErased.setStatus('current')
cerRphyUnknownRpd = NotificationType((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 70, 0, 4)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("ARRIS-CER-RPHY-MIB", "cerUnknownRpdMacAddr"), ("ARRIS-CER-RPHY-MIB", "cerUnknownRpdIpAddr"))
if mibBuilder.loadTexts: cerRphyUnknownRpd.setStatus('current')
cerRpdSsdCvcTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61), )
if mibBuilder.loadTexts: cerRpdSsdCvcTable.setStatus('current')
cerRpdSsdCvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdSsdCvcIndex"))
if mibBuilder.loadTexts: cerRpdSsdCvcEntry.setStatus('current')
cerRpdSsdCvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: cerRpdSsdCvcIndex.setStatus('current')
cerRpdSsdCvcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdCvcDescription.setStatus('current')
cerRpdSsdCvcSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcSubject.setStatus('current')
cerRpdSsdCvcIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcIssuer.setStatus('current')
cerRpdSsdCvcSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcSerialNumber.setStatus('current')
cerRpdSsdCvcCert = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 6), X509Certificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdCvcCert.setStatus('current')
cerRpdSsdCvcCaSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcCaSubject.setStatus('current')
cerRpdSsdCvcCaIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcCaIssuer.setStatus('current')
cerRpdSsdCvcCaSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdSsdCvcCaSerialNumber.setStatus('current')
cerRpdSsdCvcCaCert = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 10), X509Certificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdCvcCaCert.setStatus('current')
cerRpdSsdCvcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 61, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdCvcStatus.setStatus('current')
cerRpdDevCertTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62), )
if mibBuilder.loadTexts: cerRpdDevCertTable.setStatus('current')
cerRpdDevCertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDevCertRpdIndex"))
if mibBuilder.loadTexts: cerRpdDevCertEntry.setStatus('current')
cerRpdDevCertRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDevCertRpdIndex.setStatus('current')
cerRpdDevCert509Cert = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62, 1, 2), X509Certificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDevCert509Cert.setStatus('current')
cerRpdDevCertIssuerCaCertIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(101, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDevCertIssuerCaCertIndex.setStatus('current')
cerRpdDevCertRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 62, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDevCertRowStatus.setStatus('current')
cerRpdSsdTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63), )
if mibBuilder.loadTexts: cerRpdSsdTable.setStatus('current')
cerRpdSsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdSsdVendorId"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdSsdModel"))
if mibBuilder.loadTexts: cerRpdSsdEntry.setStatus('current')
cerRpdSsdVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cerRpdSsdVendorId.setStatus('current')
cerRpdSsdModel = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: cerRpdSsdModel.setStatus('current')
cerRpdSsdFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdFileName.setStatus('current')
cerRpdSsdAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 4), InetAddressType().clone('ipv6')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdAddrType.setStatus('current')
cerRpdSsdServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdServerAddr.setStatus('current')
cerRpdSsdServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 6), InetAddressIPv4or6()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdServerIpAddr.setStatus('current')
cerRpdSsdTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tftp", 1), ("http", 2))).clone('tftp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdTransportType.setStatus('current')
cerRpdSsdManufCvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdManufCvcIndex.setStatus('current')
cerRpdSsdCosignerCvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdCosignerCvcIndex.setStatus('current')
cerRpdSsdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdEnabled.setStatus('current')
cerRpdSsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 63, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdSsdRowStatus.setStatus('current')
cerRpdHwToSwModelTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64), )
if mibBuilder.loadTexts: cerRpdHwToSwModelTable.setStatus('current')
cerRpdHwToSwModelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdHwToSwModelVendorId"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdHwToSwModelHwModelNum"))
if mibBuilder.loadTexts: cerRpdHwToSwModelEntry.setStatus('current')
cerRpdHwToSwModelVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2))
if mibBuilder.loadTexts: cerRpdHwToSwModelVendorId.setStatus('current')
cerRpdHwToSwModelHwModelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: cerRpdHwToSwModelHwModelNum.setStatus('current')
cerRpdHwToSwModelSwModelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdHwToSwModelSwModelNum.setStatus('current')
cerRpdHwToSwModelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 64, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdHwToSwModelRowStatus.setStatus('current')
cerDsGrpToCoreChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 65), )
if mibBuilder.loadTexts: cerDsGrpToCoreChanTable.setStatus('current')
cerDsGrpToCoreChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 65, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerDsGrpToCoreChanRpdGrpName"), (0, "ARRIS-CER-RPHY-MIB", "cerDsGrpToCoreChanIfIndex"))
if mibBuilder.loadTexts: cerDsGrpToCoreChanEntry.setStatus('current')
cerDsGrpToCoreChanRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 65, 1, 1), DsVidGrpName())
if mibBuilder.loadTexts: cerDsGrpToCoreChanRpdGrpName.setStatus('current')
cerDsGrpToCoreChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 65, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerDsGrpToCoreChanIfIndex.setStatus('current')
cerRpdDsPowerFineAdjTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66), )
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjTable.setStatus('current')
cerRpdDsPowerFineAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdDsPowerFineAdjRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdDsPowerFineAdjRpdChanIfIndex"))
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjEntry.setStatus('current')
cerRpdDsPowerFineAdjRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjRpdIndex.setStatus('current')
cerRpdDsPowerFineAdjRpdChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjRpdChanIfIndex.setStatus('current')
cerRpdDsPowerFineAdjDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-80, 0))).setUnits('Steps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjDelta.setStatus('current')
cerRpdDsPowerFineAdjRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 66, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdDsPowerFineAdjRowStatus.setStatus('current')
cerRpdShelfTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67), )
if mibBuilder.loadTexts: cerRpdShelfTable.setStatus('current')
cerRpdShelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdShelfSerialNumber"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdShelfRpdIndex"))
if mibBuilder.loadTexts: cerRpdShelfEntry.setStatus('current')
cerRpdShelfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: cerRpdShelfSerialNumber.setStatus('current')
cerRpdShelfRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67, 1, 2), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdShelfRpdIndex.setStatus('current')
cerRpdShelfEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdShelfEntityIndex.setStatus('current')
cerRpdShelfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 67, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdShelfSlot.setStatus('current')
cerOobNdfDsChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68), )
if mibBuilder.loadTexts: cerOobNdfDsChanTable.setStatus('current')
cerOobNdfDsChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerOobNdfDsChanIfIndex"))
if mibBuilder.loadTexts: cerOobNdfDsChanEntry.setStatus('current')
cerOobNdfDsChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerOobNdfDsChanIfIndex.setStatus('current')
cerOobNdfDsChanRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 2), DsVidGrpName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanRpdGrpName.setStatus('current')
cerOobNdfDsChanCenterFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50000000, 1000000000), ))).setUnits('Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanCenterFreq.setStatus('current')
cerOobNdfDsChanWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80000, 80000), ValueRangeConstraint(160000, 160000), ValueRangeConstraint(320000, 320000), ValueRangeConstraint(640000, 640000), ValueRangeConstraint(1280000, 1280000), ValueRangeConstraint(2560000, 2560000), ValueRangeConstraint(5120000, 5120000), ValueRangeConstraint(25600000, 25600000), )).clone(2560000)).setUnits('Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanWidth.setStatus('current')
cerOobNdfDsChanSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 5), InetAddressType().clone('ipv6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanSrcIpAddrType.setStatus('current')
cerOobNdfDsChanSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 6), InetAddressIPv4or6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanSrcIpAddr.setStatus('current')
cerOobNdfDsChanPowerAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 7), TenthdB().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(-200, -30), ))).setUnits('TenthdB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanPowerAdj.setStatus('current')
cerOobNdfDsChanDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2147483649, 2147549183), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdfDsChanDataPwId.setStatus('current')
cerOobNdfDsChanChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 68, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerOobNdfDsChanChanSelector.setStatus('current')
cerOobNdrUsChanTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69), )
if mibBuilder.loadTexts: cerOobNdrUsChanTable.setStatus('current')
cerOobNdrUsChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerOobNdrUsChanIfIndex"))
if mibBuilder.loadTexts: cerOobNdrUsChanEntry.setStatus('current')
cerOobNdrUsChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerOobNdrUsChanIfIndex.setStatus('current')
cerOobNdrUsChanRpdGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 2), DsVidGrpName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanRpdGrpName.setStatus('current')
cerOobNdrUsChanCenterFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000000, 65000000), ))).setUnits('Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanCenterFreq.setStatus('current')
cerOobNdrUsChanWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(160000, 160000), ValueRangeConstraint(320000, 320000), ValueRangeConstraint(640000, 640000), ValueRangeConstraint(1280000, 1280000), ValueRangeConstraint(2560000, 2560000), ValueRangeConstraint(5120000, 5120000), )).clone(2560000)).setUnits('Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanWidth.setStatus('current')
cerOobNdrUsChanDstIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 5), InetAddressType().clone('ipv6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanDstIpAddrType.setStatus('current')
cerOobNdrUsChanDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 6), InetAddressIPv4or6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanDstIpAddr.setStatus('current')
cerOobNdrUsChanDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanDscp.setStatus('current')
cerOobNdrUsChanPowerTgt = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 8), TenthdB().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('TenthdB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanPowerTgt.setStatus('current')
cerOobNdrUsChanDataPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerOobNdrUsChanDataPwId.setStatus('current')
cerOobNdrUsChanChanSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerOobNdrUsChanChanSelector.setStatus('current')
cerOobNdrUsChanSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 11), InetAddressType().clone('ipv6')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerOobNdrUsChanSrcIpAddrType.setStatus('current')
cerOobNdrUsChanSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 69, 1, 12), InetAddressIPv4or6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerOobNdrUsChanSrcIpAddr.setStatus('current')
cerRpdAdpLldpPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71), )
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusTable.setStatus('current')
cerRpdAdpLldpPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdAdpLldpPortStatusRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdAdpLldpPortStatusEnetPortNum"))
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusEntry.setStatus('current')
cerRpdAdpLldpPortStatusRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusRpdIndex.setStatus('current')
cerRpdAdpLldpPortStatusEnetPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusEnetPortNum.setStatus('current')
cerRpdAdpLldpPortStatusAdpState = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("initialized", 1), ("holddown", 2), ("waitfornbr", 3), ("uplink", 4), ("downlink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusAdpState.setStatus('current')
cerRpdAdpLldpPortStatusAdpHopCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusAdpHopCnt.setStatus('current')
cerRpdAdpLldpPortStatusNbrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusNbrMacAddr.setStatus('current')
cerRpdAdpLldpPortStatusChassisSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("chassisComponent", 1), ("interfaceAlias", 2), ("portComponent", 3), ("macAddress", 4), ("networkAddress", 5), ("interfaceName", 6), ("locallyAssigned", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusChassisSubType.setStatus('current')
cerRpdAdpLldpPortStatusChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusChassisId.setStatus('current')
cerRpdAdpLldpPortStatusPortSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("interfaceAlias", 1), ("portComponent", 2), ("macAddress", 3), ("networkAddress", 4), ("interfaceName", 5), ("agentCircuitId", 6), ("locallyAssigned", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusPortSubType.setStatus('current')
cerRpdAdpLldpPortStatusPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 71, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdAdpLldpPortStatusPortId.setStatus('current')
cerRpdEnetDiagsTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72), )
if mibBuilder.loadTexts: cerRpdEnetDiagsTable.setStatus('current')
cerRpdEnetDiagsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdEnetDiagsRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdEnetDiagsEthPortIndex"))
if mibBuilder.loadTexts: cerRpdEnetDiagsEntry.setStatus('current')
cerRpdEnetDiagsRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdEnetDiagsRpdIndex.setStatus('current')
cerRpdEnetDiagsEthPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cerRpdEnetDiagsEthPortIndex.setStatus('current')
cerRpdEnetDiagsTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 3), Unsigned32()).setUnits('decibel-milliwatts (dBm)').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdEnetDiagsTxPower.setStatus('current')
cerRpdEnetDiagsRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 4), Unsigned32()).setUnits('decibel-milliwatts (dBm)').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdEnetDiagsRxPower.setStatus('current')
cerRpdEnetDiagsTxBias = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 5), Unsigned32()).setUnits('milliamps (mA)').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdEnetDiagsTxBias.setStatus('current')
cerRpdEnetDiagsTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 6), Integer32()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdEnetDiagsTemp.setStatus('current')
cerRpdEnetDiagsVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 72, 1, 7), Unsigned32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdEnetDiagsVcc.setStatus('current')
cerRphyUsScQamConfigPreambleTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73), )
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleTable.setStatus('current')
cerRphyUsScQamConfigPreambleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyUsScQamConfigPreambleIndex"))
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleEntry.setStatus('current')
cerRphyUsScQamConfigPreambleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleIndex.setStatus('current')
cerRphyUsScQamConfigPreambleSuperstring = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 192))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleSuperstring.setStatus('current')
cerRphyUsScQamConfigPreambleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleDescription.setStatus('current')
cerRphyUsScQamConfigPreambleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 73, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsScQamConfigPreambleRowStatus.setStatus('current')
cerRphyUsScQamModPreambleTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 74), )
if mibBuilder.loadTexts: cerRphyUsScQamModPreambleTable.setStatus('current')
cerRphyUsScQamModPreambleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 74, 1), ).setIndexNames((0, "CADANT-CMTS-UPCHANNEL-MIB", "cadIfCmtsModIndex"))
if mibBuilder.loadTexts: cerRphyUsScQamModPreambleEntry.setStatus('current')
cerRphyUsScQamModPreambleStringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 74, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsScQamModPreambleStringIndex.setStatus('current')
cerRphyUsScQamModPreambleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 74, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsScQamModPreambleRowStatus.setStatus('current')
cerRphyUsOfdmaTmpltPreambleTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75), )
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltPreambleTable.setStatus('current')
cerRphyUsOfdmaTmpltPreambleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1), ).setIndexNames((0, "CADANT-CMTS-UPCHANNEL-MIB", "cadIfUsOfdmaTmpltIndex"))
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltPreambleEntry.setStatus('current')
cerRphyUsOfdmaTmpltPreambleStringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltPreambleStringIndex.setStatus('current')
cerRphyUsOfdmaTmpltRandomizationSeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388607))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltRandomizationSeed.setStatus('current')
cerRphyUsOfdmaTmpltInitRngPreambleOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltInitRngPreambleOffset.setStatus('current')
cerRphyUsOfdmaTmpltFineRngPreambleOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltFineRngPreambleOffset.setStatus('current')
cerRphyUsOfdmaTmpltPreambleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 75, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaTmpltPreambleRowStatus.setStatus('current')
cerRphyUsOfdmaConfigPreambleTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76), )
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleTable.setStatus('current')
cerRphyUsOfdmaConfigPreambleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyUsOfdmaConfigPreambleIndex"))
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleEntry.setStatus('current')
cerRphyUsOfdmaConfigPreambleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleIndex.setStatus('current')
cerRphyUsOfdmaConfigPreambleSuperstring = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 192))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleSuperstring.setStatus('current')
cerRphyUsOfdmaConfigPreambleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleDescription.setStatus('current')
cerRphyUsOfdmaConfigPreambleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 76, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyUsOfdmaConfigPreambleRowStatus.setStatus('current')
cerRpdUsScQamQueryControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 77))
cerRpdUsScQamQueryControlRpdIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 77, 1), CerRpdIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsScQamQueryControlRpdIndex.setStatus('current')
cerRpdUsScQamQueryControlModIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 77, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsScQamQueryControlModIndex.setStatus('current')
cerRpdUsScQamQueryControlEnable = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 77, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsScQamQueryControlEnable.setStatus('current')
cerRpdUsScQamIucResponseTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78), )
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseTable.setStatus('current')
cerRpdUsScQamIucResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdUsScQamIucResponseIucIndex"))
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseEntry.setStatus('current')
cerRpdUsScQamIucResponseIucIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 9, 10, 11))).clone(namedValues=NamedValues(("request", 1), ("requestData", 2), ("initialRanging", 3), ("periodicRanging", 4), ("shortData", 5), ("longData", 6), ("advPhyShortData", 9), ("advPhyLongData", 10), ("ugs", 11))))
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseIucIndex.setStatus('current')
cerRpdUsScQamIucResponseLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseLength.setStatus('current')
cerRpdUsScQamIucResponseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseOffset.setStatus('current')
cerRpdUsScQamIucResponseModType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("qpsk0", 1), ("qpsk1", 2))).clone('qpsk0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseModType.setStatus('current')
cerRpdUsScQamIucResponseScramblerSeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseScramblerSeed.setStatus('current')
cerRpdUsScQamIucResponseGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 96)).clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseGuardTime.setStatus('current')
cerRpdUsScQamIucResponseRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 78, 1, 7), CerRpdIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamIucResponseRpdIndex.setStatus('current')
cerRpdUsScQamSuperstringResponseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 79))
cerRpdUsScQamSuperstringResponseRpdIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 79, 1), CerRpdIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamSuperstringResponseRpdIndex.setStatus('current')
cerRpdUsScQamPreambleResponseSuperstring = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 79, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 192)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamPreambleResponseSuperstring.setStatus('current')
cerRpdUsScQamPreambleResponseTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 79, 3), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsScQamPreambleResponseTimestamp.setStatus('current')
cerRpdUsOfdmaQueryControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 80))
cerRpdUsOfdmaQueryControlRpdIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 80, 1), CerRpdIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsOfdmaQueryControlRpdIndex.setStatus('current')
cerRpdUsOfdmaQueryControlTmpltIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 80, 2), CadOfdmaDataTemplateIndexType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsOfdmaQueryControlTmpltIndex.setStatus('current')
cerRpdUsOfdmaQueryControlEnable = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 80, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerRpdUsOfdmaQueryControlEnable.setStatus('current')
cerRpdUsOfdmaPreambleResponseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81))
cerRpdUsOfdmaPreambleResponseRpdIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 1), CerRpdIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseRpdIndex.setStatus('current')
cerRpdUsOfdmaPreambleResponseTmpltIndex = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 2), CadOfdmaDataTemplateIndexType().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseTmpltIndex.setStatus('current')
cerRpdUsOfdmaPreambleResponseRolloffPeriod = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(32, 32), ValueRangeConstraint(64, 64), ValueRangeConstraint(96, 96), ValueRangeConstraint(128, 128), ValueRangeConstraint(160, 160), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), ))).setUnits('samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseRolloffPeriod.setStatus('current')
cerRpdUsOfdmaPreambleResponseCyclicPrefix = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(96, 96), ValueRangeConstraint(128, 128), ValueRangeConstraint(160, 160), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), ValueRangeConstraint(256, 256), ValueRangeConstraint(288, 288), ValueRangeConstraint(320, 320), ValueRangeConstraint(384, 384), ValueRangeConstraint(512, 512), ValueRangeConstraint(640, 640), )).clone(96)).setUnits('samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseCyclicPrefix.setStatus('current')
cerRpdUsOfdmaPreambleResponseSymbolsPerFrame = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 36)).clone(16)).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseSymbolsPerFrame.setStatus('current')
cerRpdUsOfdmaPreambleResponseRandomizationSeed = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388607))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseRandomizationSeed.setStatus('current')
cerRpdUsOfdmaResponsePreambleInitRngOffset = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaResponsePreambleInitRngOffset.setStatus('current')
cerRpdUsOfdmaResponsePreambleFineRngOffset = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaResponsePreambleFineRngOffset.setStatus('current')
cerRpdUsOfdmaPreambleResponseSuperstring = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 192)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseSuperstring.setStatus('current')
cerRpdUsOfdmaPreambleResponseTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 81, 10), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerRpdUsOfdmaPreambleResponseTimestamp.setStatus('current')
cerRpdUsRfPortTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82), )
if mibBuilder.loadTexts: cerRpdUsRfPortTable.setStatus('current')
cerRpdUsRfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdUsRfPortRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdUsRfPortRpdRfPortId"))
if mibBuilder.loadTexts: cerRpdUsRfPortEntry.setStatus('current')
cerRpdUsRfPortRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdUsRfPortRpdIndex.setStatus('current')
cerRpdUsRfPortRpdRfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cerRpdUsRfPortRpdRfPortId.setStatus('current')
cerRpdUsRfPortBasePowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1, 3), Integer32().clone(20)).setUnits('TenthDbMv').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsRfPortBasePowerLevel.setStatus('current')
cerRpdUsRfPortRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsRfPortRowstatus.setStatus('current')
cerRpdUsRfPortSfLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 82, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("medium", 1), ("high", 2))).clone('medium')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdUsRfPortSfLevel.setStatus('current')
cerRphyTargetPowerAdjTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 83), )
if mibBuilder.loadTexts: cerRphyTargetPowerAdjTable.setStatus('current')
cerRphyTargetPowerAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 83, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRphyTargetPowerAdjChanIfIndex"))
if mibBuilder.loadTexts: cerRphyTargetPowerAdjEntry.setStatus('current')
cerRphyTargetPowerAdjChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 83, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cerRphyTargetPowerAdjChanIfIndex.setStatus('current')
cerRphyTargetPowerAdjPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 83, 1, 2), Integer32()).setUnits('TenthdB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyTargetPowerAdjPowerLevel.setStatus('current')
cerRphyTargetPowerAdjRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 83, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRphyTargetPowerAdjRowStatus.setStatus('current')
cerPnmCmtsUtscCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84), )
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgTable.setStatus('current')
cerPnmCmtsUtscCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerPnmCmtsUtscCfgIndex"))
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgEntry.setStatus('current')
cerPnmCmtsUtscCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgIndex.setStatus('current')
cerPnmCmtsUtscCfgStaticPwDestIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 2), InetAddressType().clone('ipv6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgStaticPwDestIpAddrType.setStatus('current')
cerPnmCmtsUtscCfgStaticPwDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 3), InetAddressIPv4or6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgStaticPwDestIpAddr.setStatus('current')
cerPnmCmtsUtscCfgStaticPwSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgStaticPwSessionId.setStatus('current')
cerPnmCmtsUtscCfgStaticPwSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 5), InetAddressIPv4or6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgStaticPwSrcIpAddr.setStatus('current')
cerPnmCmtsUtscCfgStaticPwSrcEnetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 84, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerPnmCmtsUtscCfgStaticPwSrcEnetPort.setStatus('current')
cerRpdAuxCoreTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86), )
if mibBuilder.loadTexts: cerRpdAuxCoreTable.setStatus('current')
cerRpdAuxCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1), ).setIndexNames((0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreRpdIndex"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreAddrType"), (0, "ARRIS-CER-RPHY-MIB", "cerRpdAuxCoreIpAddr"))
if mibBuilder.loadTexts: cerRpdAuxCoreEntry.setStatus('current')
cerRpdAuxCoreRpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1, 1), CerRpdIndex())
if mibBuilder.loadTexts: cerRpdAuxCoreRpdIndex.setStatus('current')
cerRpdAuxCoreAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cerRpdAuxCoreAddrType.setStatus('current')
cerRpdAuxCoreIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1, 3), InetAddressIPv4or6())
if mibBuilder.loadTexts: cerRpdAuxCoreIpAddr.setStatus('current')
cerRpdAuxCoreDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdAuxCoreDescription.setStatus('current')
cerRpdAuxCoreRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 9, 1, 9, 86, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cerRpdAuxCoreRowStatus.setStatus('current')
mibBuilder.exportSymbols("ARRIS-CER-RPHY-MIB", cerOobNdfDsChanSrcIpAddr=cerOobNdfDsChanSrcIpAddr, cerRpdDataSsdStatus=cerRpdDataSsdStatus, cerRpdSessionInfoCoreLcceIpAddr=cerRpdSessionInfoCoreLcceIpAddr, cerRpdDsExclTable=cerRpdDsExclTable, cerRpdUsOfdmaPreambleResponseTimestamp=cerRpdUsOfdmaPreambleResponseTimestamp, cerRpdNameRpdIndex=cerRpdNameRpdIndex, cerFnDsRfPortTable=cerFnDsRfPortTable, cerRpdChanSelectorDataPwId=cerRpdChanSelectorDataPwId, cerRpdDataSsdTargetImageName=cerRpdDataSsdTargetImageName, cerRphyDscpPktType=cerRphyDscpPktType, cerFnDsRfPortRpdIndex=cerFnDsRfPortRpdIndex, cerOobNdfDsChanEntry=cerOobNdfDsChanEntry, cerRpdNameResetRpd=cerRpdNameResetRpd, cerRpdIfMtu=cerRpdIfMtu, cerRpdDataSsdAttempts=cerRpdDataSsdAttempts, cerUsRfPortFnFnName=cerUsRfPortFnFnName, cerOobNdfDsChanCenterFreq=cerOobNdfDsChanCenterFreq, cerRpdSsdCosignerCvcIndex=cerRpdSsdCosignerCvcIndex, cerRpdDsPowerFineAdjDelta=cerRpdDsPowerFineAdjDelta, cerRpdIfType=cerRpdIfType, cerRpdAuxCoreRowStatus=cerRpdAuxCoreRowStatus, cerRpdDsPowerFineAdjRpdIndex=cerRpdDsPowerFineAdjRpdIndex, cerRpdSsdCvcIssuer=cerRpdSsdCvcIssuer, cerDsRfPortVideoEntry=cerDsRfPortVideoEntry, cerDsGrpToPwMcastAddrIpAddrType=cerDsGrpToPwMcastAddrIpAddrType, cerRpdUsChanTable=cerRpdUsChanTable, cerRpdNameRowStatus=cerRpdNameRowStatus, cerRpdUsScQamQueryControlModIndex=cerRpdUsScQamQueryControlModIndex, cerRpdAuxCoreTable=cerRpdAuxCoreTable, cerRphyCwToneEntry=cerRphyCwToneEntry, cerRpdCwTonePowerAdj=cerRpdCwTonePowerAdj, cerRpdIfRfPortId=cerRpdIfRfPortId, cerRpdDsExclEntry=cerRpdDsExclEntry, cerRpdUsChanEntry=cerRpdUsChanEntry, cerRphyDscpEntry=cerRphyDscpEntry, cerRpdSsdTable=cerRpdSsdTable, cerRphyDscpValue=cerRphyDscpValue, cerRpdShelfEntry=cerRpdShelfEntry, cerRpdDevCertRpdIndex=cerRpdDevCertRpdIndex, cerRphyUsOfdmaTmpltPreambleRowStatus=cerRphyUsOfdmaTmpltPreambleRowStatus, cerRpdL2Tpv3TunnelInfoRpdCCID=cerRpdL2Tpv3TunnelInfoRpdCCID, cerCoreChanToRpdChanRpdRfPort=cerCoreChanToRpdChanRpdRfPort, cerVideoRpdDsRfPortEntry=cerVideoRpdDsRfPortEntry, cerRpdEnetDiagsTable=cerRpdEnetDiagsTable, cerOobNdrUsChanRpdGrpName=cerOobNdrUsChanRpdGrpName, cerRpdDataInitState=cerRpdDataInitState, cerOobNdrUsChanDstIpAddrType=cerOobNdrUsChanDstIpAddrType, cerRpdSsdCvcCaSubject=cerRpdSsdCvcCaSubject, cerRpdChanImpairedTable=cerRpdChanImpairedTable, cerRphyUsScQamConfigPreambleDescription=cerRphyUsScQamConfigPreambleDescription, cerCoreChanToRpdChanRpdIndex=cerCoreChanToRpdChanRpdIndex, cerRpdUsOfdmaQueryControlRpdIndex=cerRpdUsOfdmaQueryControlRpdIndex, cerRpdSessionInfoRpdLcceIpAddr=cerRpdSessionInfoRpdLcceIpAddr, cerRpdUsScQamQueryControlRpdIndex=cerRpdUsScQamQueryControlRpdIndex, cerFnUsRfPortRpdPortId=cerFnUsRfPortRpdPortId, cerOob551DsAddrToChanTable=cerOob551DsAddrToChanTable, cerRpdUsScQamIucResponseIucIndex=cerRpdUsScQamIucResponseIucIndex, cerRphyCoreIpAddr=cerRphyCoreIpAddr, cerDsGrpToPwMcastAddrEntry=cerDsGrpToPwMcastAddrEntry, cerDsRfPortVideoTable=cerDsRfPortVideoTable, cerRpdEvControlEntry=cerRpdEvControlEntry, cerOobNdrUsChanDscp=cerOobNdrUsChanDscp, cerOobNdrUsChanSrcIpAddrType=cerOobNdrUsChanSrcIpAddrType, cerUsRfPortFnEntry=cerUsRfPortFnEntry, cerRpdSessionInfoRpdSessionId=cerRpdSessionInfoRpdSessionId, cerRpdDsRfPortRpdRfPortId=cerRpdDsRfPortRpdRfPortId, cerRpdCwToneUsesDedicatedGen=cerRpdCwToneUsesDedicatedGen, cerOobNdfDsChanTable=cerOobNdfDsChanTable, cerRpdNameLcceMode=cerRpdNameLcceMode, cerRphyCwToneFreq=cerRphyCwToneFreq, cerRphySessionInfoRpdSessionId=cerRphySessionInfoRpdSessionId, cerOobRpdUsRfPortEntry=cerOobRpdUsRfPortEntry, cerOobRpdUsRfPortRowStatus=cerOobRpdUsRfPortRowStatus, cerRpdUsScQamIucResponseRpdIndex=cerRpdUsScQamIucResponseRpdIndex, cerRpdDataLastStatusReadTime=cerRpdDataLastStatusReadTime, cerRpdSsdCvcCert=cerRpdSsdCvcCert, cerRpdDsExclRowStatus=cerRpdDsExclRowStatus, cerRpdToCoreChanRpdRfPort=cerRpdToCoreChanRpdRfPort, cerRphyLocalEventLogSize=cerRphyLocalEventLogSize, cerRphySessionInfoSessionType=cerRphySessionInfoSessionType, cerVideoRpdDsRfPortRowStatus=cerVideoRpdDsRfPortRowStatus, cerOobRpdUsRfPortRpdGrpName=cerOobRpdUsRfPortRpdGrpName, cerRpdDsExclLowFreq=cerRpdDsExclLowFreq, cerRphyUsOfdmaConfigPreambleSuperstring=cerRphyUsOfdmaConfigPreambleSuperstring, cerRpdDataPrState=cerRpdDataPrState, cerRpdDataNumCrashFiles=cerRpdDataNumCrashFiles, cerRphyUsScQamModPreambleStringIndex=cerRphyUsScQamModPreambleStringIndex, cerRpdEnetDiagsTxBias=cerRpdEnetDiagsTxBias, cerRpdSessionInfoIpAddrType=cerRpdSessionInfoIpAddrType, cerRphySessionInfoOperStatus=cerRphySessionInfoOperStatus, cerRpdDataPnmCapabUpcMinNumSymbols50Khz=cerRpdDataPnmCapabUpcMinNumSymbols50Khz, cerDsRfPortVideoGrpName=cerDsRfPortVideoGrpName, cerDsGrpToPwMcastAddrTable=cerDsGrpToPwMcastAddrTable, cerRphySessionInfoSessionSubtype=cerRphySessionInfoSessionSubtype, cerRphyVspRowStatus=cerRphyVspRowStatus, cerRpdMacAddrName=cerRpdMacAddrName, cerL2Tpv3TunnelInfoRpdUnknownPwPkts=cerL2Tpv3TunnelInfoRpdUnknownPwPkts, cerRphyCoreLoopbackIfIndex=cerRphyCoreLoopbackIfIndex, cerRpdSsdVendorId=cerRpdSsdVendorId, cerRpdIfTable=cerRpdIfTable, cerUsRfPortFnRpdIndex=cerUsRfPortFnRpdIndex, cerRpdEvRowStatus=cerRpdEvRowStatus, cerRphyAllRpdMcastIpAddr=cerRphyAllRpdMcastIpAddr, cerL2Tpv3TunnelInfoEntry=cerL2Tpv3TunnelInfoEntry, cerRpdAuxCoreDescription=cerRpdAuxCoreDescription, cerVideoRpdDsRfPortRpdPortId=cerVideoRpdDsRfPortRpdPortId, cerOobNdfDsChanRpdGrpName=cerOobNdfDsChanRpdGrpName, cerRpdAuxCoreRpdIndex=cerRpdAuxCoreRpdIndex, cerRpdSsdCvcTable=cerRpdSsdCvcTable, cerRphyUsScQamModPreambleEntry=cerRphyUsScQamModPreambleEntry, cerRpdGlobalEvControlEntry=cerRpdGlobalEvControlEntry, cerRpdAuxCoreEntry=cerRpdAuxCoreEntry, cerRpdDataDeviceDescription=cerRpdDataDeviceDescription, cerRphyMcastInterface=cerRphyMcastInterface, cerRpdSsdCvcDescription=cerRpdSsdCvcDescription, cerRpdUsOfdmaResponsePreambleFineRngOffset=cerRpdUsOfdmaResponsePreambleFineRngOffset, cerRpdUsExclRpdRfPortId=cerRpdUsExclRpdRfPortId, cerRphySessionInfoEffectiveMtu=cerRphySessionInfoEffectiveMtu, cerRpdDataCurrentSwImageName=cerRpdDataCurrentSwImageName, cerRphyUsOfdmaTmpltPreambleEntry=cerRphyUsOfdmaTmpltPreambleEntry, cerRphyUnknownRpd=cerRphyUnknownRpd, cerRpdIfDiscards=cerRpdIfDiscards, cerRpdUsOfdmaQueryControlEnable=cerRpdUsOfdmaQueryControlEnable, cerRpdUsOfdmaPreambleResponseRolloffPeriod=cerRpdUsOfdmaPreambleResponseRolloffPeriod, cerDsRfPortFnTable=cerDsRfPortFnTable, cerRpdDataSecState=cerRpdDataSecState, cerL2Tpv3TunnelInfoIpAddrType=cerL2Tpv3TunnelInfoIpAddrType, cerOobNdfDsChanIfIndex=cerOobNdfDsChanIfIndex, cerDsRfPortFnFnName=cerDsRfPortFnFnName, cerRpdIndexEntry=cerRpdIndexEntry, cerRpdDsScQamRpdDepiChanId=cerRpdDsScQamRpdDepiChanId, cerRpdSessionInfoRpdIndex=cerRpdSessionInfoRpdIndex, PwOperState=PwOperState, cerRpdDsScQamTable=cerRpdDsScQamTable, cerRphyDscpTable=cerRphyDscpTable, cerRpdDataHwVersion=cerRpdDataHwVersion, cerRpdDataCurrentSwImageServerAddress=cerRpdDataCurrentSwImageServerAddress, cerRpdEnetDiagsVcc=cerRpdEnetDiagsVcc, cerRpdUsScQamQueryControlEnable=cerRpdUsScQamQueryControlEnable, cerRphyTargetPowerAdjEntry=cerRphyTargetPowerAdjEntry, cerDsRfPortFnRpdPortId=cerDsRfPortFnRpdPortId, PwType=PwType, cerRphyGcpKeepAliveIntvl=cerRphyGcpKeepAliveIntvl, cerRphyUsOfdmaTmpltPreambleTable=cerRphyUsOfdmaTmpltPreambleTable, cerRpdDsScQamRpdChanIfIndex=cerRpdDsScQamRpdChanIfIndex, cerRphyDlmMode=cerRphyDlmMode, cerRpdGlobalEvPriority=cerRpdGlobalEvPriority, cerRpdEnetDiagsRpdIndex=cerRpdEnetDiagsRpdIndex, cerRpdNameAdpAutoRevert=cerRpdNameAdpAutoRevert, cerRpdDsScQamEntry=cerRpdDsScQamEntry, cerRpdDsOfdmChanTable=cerRpdDsOfdmChanTable, cerRpdDataPnmCapabUpcMinNumSymbols25Khz=cerRpdDataPnmCapabUpcMinNumSymbols25Khz, cerRpdAdpLldpPortStatusRpdIndex=cerRpdAdpLldpPortStatusRpdIndex, cerRphyAuxCoreRowStatus=cerRphyAuxCoreRowStatus, cerRphyRpdCoreType=cerRphyRpdCoreType, cerRpdNameDtiMapAdj=cerRpdNameDtiMapAdj, cerRpdDataPnmCapabUpcSupportsStaggeredPies=cerRpdDataPnmCapabUpcSupportsStaggeredPies, cerRpdHwToSwModelSwModelNum=cerRpdHwToSwModelSwModelNum, cerRpdChanSelectorPwSubType=cerRpdChanSelectorPwSubType, cerRpdDataDevIdUsBurstRcvrSerialNum=cerRpdDataDevIdUsBurstRcvrSerialNum, cerRphyEvThrottleThreshold=cerRphyEvThrottleThreshold, cerRpdAuxCoreAddrType=cerRpdAuxCoreAddrType, cerRphyUsScQamConfigPreambleRowStatus=cerRphyUsScQamConfigPreambleRowStatus, cerRpdHwToSwModelTable=cerRpdHwToSwModelTable, cerRpdDataNumDsPorts=cerRpdDataNumDsPorts, cerOobNdfDsChanPowerAdj=cerOobNdfDsChanPowerAdj, cerRphyAuxCoreTable=cerRphyAuxCoreTable, cerRpdSsdCvcIndex=cerRpdSsdCvcIndex, cerRphyUsOfdmaConfigPreambleEntry=cerRphyUsOfdmaConfigPreambleEntry, cerRpdDataAssetId=cerRpdDataAssetId, cerRpdDatadPnmCapabUpcSupportsDedicatedPwUpcRxMer=cerRpdDatadPnmCapabUpcSupportsDedicatedPwUpcRxMer, cerRpdDataIpAddr=cerRpdDataIpAddr, cerFnDsRfPortRowStatus=cerFnDsRfPortRowStatus, cerPnmCmtsUtscCfgStaticPwSrcEnetPort=cerPnmCmtsUtscCfgStaticPwSrcEnetPort, cerRpdAdpLldpPortStatusChassisId=cerRpdAdpLldpPortStatusChassisId, cerRpdUsOfdmaQueryControlGroup=cerRpdUsOfdmaQueryControlGroup, cerRphyEvThrottleInterval=cerRphyEvThrottleInterval, cerRphyLocalConfigFileSaved=cerRphyLocalConfigFileSaved, cerRpdSsdServerAddr=cerRpdSsdServerAddr, cerRpdUsChanRpdIndex=cerRpdUsChanRpdIndex, cerRpdShelfTable=cerRpdShelfTable, PwStatus=PwStatus, cerPnmCmtsUtscCfgStaticPwDestIpAddrType=cerPnmCmtsUtscCfgStaticPwDestIpAddrType, cerRphyVspEntry=cerRphyVspEntry, cerRpdDataEntry=cerRpdDataEntry, cerRpdDataVendorName=cerRpdDataVendorName, cerOob551DsAddrToChanDestUdpPort=cerOob551DsAddrToChanDestUdpPort, cerDsRfPortFnEntry=cerDsRfPortFnEntry, cerRpdIndexTable=cerRpdIndexTable, cerRpdL2Tpv3TunnelInfoTable=cerRpdL2Tpv3TunnelInfoTable, cerUsRfPortFnTable=cerUsRfPortFnTable, cerFnUsRfPortRpdIndex=cerFnUsRfPortRpdIndex, cerRpdDataLastResetReason=cerRpdDataLastResetReason, cerRpdDataPnmCapabUpcSupportsFreqDomainSamples=cerRpdDataPnmCapabUpcSupportsFreqDomainSamples, cerCoreChanToRpdChanEntry=cerCoreChanToRpdChanEntry, cerRphyUsOfdmaTmpltPreambleStringIndex=cerRphyUsOfdmaTmpltPreambleStringIndex, cerRpdDataLocationDescription=cerRpdDataLocationDescription, cerRpdDataModelNumber=cerRpdDataModelNumber, cerRpdHwToSwModelEntry=cerRpdHwToSwModelEntry, cerRpdSessionInfoEntry=cerRpdSessionInfoEntry, cerRpdSessionInfoOperStatus=cerRpdSessionInfoOperStatus, cerOobNdrUsChanPowerTgt=cerOobNdrUsChanPowerTgt, cerRpdNameUcamCardId=cerRpdNameUcamCardId, cerRpdCwToneRfPortId=cerRpdCwToneRfPortId, cerRpdDevCertRowStatus=cerRpdDevCertRowStatus, cerRphyMcastActiveInterface=cerRphyMcastActiveInterface, cerOobRpdUsRfPortTable=cerOobRpdUsRfPortTable, cerRphyRpdPollInterval=cerRphyRpdPollInterval, cerRpdDsScQamRpdChanSelector=cerRpdDsScQamRpdChanSelector, cerDsGrpToCoreChanTable=cerDsGrpToCoreChanTable, cerRpdDataCurrentSwImageServerType=cerRpdDataCurrentSwImageServerType, cerOobNdrUsChanDataPwId=cerOobNdrUsChanDataPwId, cerRpdEnetDiagsTxPower=cerRpdEnetDiagsTxPower, cerOobNdrUsChanEntry=cerOobNdrUsChanEntry, cerRpdDsPowerFineAdjTable=cerRpdDsPowerFineAdjTable, cerDsGrpToPwMcastAddrRpdGrpName=cerDsGrpToPwMcastAddrRpdGrpName, cerOobNdfDsChanChanSelector=cerOobNdfDsChanChanSelector, cerRphyGcpKeepAliveTimeout=cerRphyGcpKeepAliveTimeout, cerDsGrpToPwMcastAddrPwMcastIpAddr=cerDsGrpToPwMcastAddrPwMcastIpAddr, cerL2Tpv3TunnelInfoRpdCCID=cerL2Tpv3TunnelInfoRpdCCID, cerRpdCwToneFreq=cerRpdCwToneFreq, cerRpdDataVendorOid=cerRpdDataVendorOid, cerRpdName=cerRpdName, cerRpdChanSelectorPhyIfIndex=cerRpdChanSelectorPhyIfIndex, cerRpdChanSelectorEntry=cerRpdChanSelectorEntry, cerDsRfPortVideoRpdPortId=cerDsRfPortVideoRpdPortId, cerRpdDevCert509Cert=cerRpdDevCert509Cert, cerRphyTargetPowerAdjTable=cerRphyTargetPowerAdjTable, cerDsGrpToPwMcastAddrRowStatus=cerDsGrpToPwMcastAddrRowStatus, PwSubtype=PwSubtype, cerRpdDsOfdmChanRpdChanSelector=cerRpdDsOfdmChanRpdChanSelector, cerRpdSessionInfoRpdCCID=cerRpdSessionInfoRpdCCID, cerRpdChanImpairedRfPortId=cerRpdChanImpairedRfPortId, cerRpdCwToneEntry=cerRpdCwToneEntry, cerRphyAuxCoreEntry=cerRphyAuxCoreEntry, cerRpdAuxCoreStatusTable=cerRpdAuxCoreStatusTable, cerRpdUsScQamQueryControlGroup=cerRpdUsScQamQueryControlGroup, cerRpdSessionInfoTable=cerRpdSessionInfoTable, cerFnUsRfPortEntry=cerFnUsRfPortEntry, cerRphyGroup=cerRphyGroup, cerRpdDsStatsPktsOut=cerRpdDsStatsPktsOut, cerRpdEvReporting=cerRpdEvReporting, cerFnUsRfPortTable=cerFnUsRfPortTable, cerRpdChanImpairedTimestamp=cerRpdChanImpairedTimestamp, cerL2Tpv3TunnelInfoRpdLcceIpAddr=cerL2Tpv3TunnelInfoRpdLcceIpAddr, cerRphyUsOfdmaConfigPreambleRowStatus=cerRphyUsOfdmaConfigPreambleRowStatus, cerRpdDataPnmCapabUpcMaxNumSymbols25Khz=cerRpdDataPnmCapabUpcMaxNumSymbols25Khz, cerRphyAuxCoreDescription=cerRphyAuxCoreDescription, cerRpdDataDeviceAlias=cerRpdDataDeviceAlias, cerOobNdrUsChanIfIndex=cerOobNdrUsChanIfIndex, cerRpdDataCurrentSwImageLastUpdate=cerRpdDataCurrentSwImageLastUpdate, cerRpdDsPowerFineAdjEntry=cerRpdDsPowerFineAdjEntry, cerRpdUsOfdmaPreambleResponseTmpltIndex=cerRpdUsOfdmaPreambleResponseTmpltIndex, cerRpdNameStatusPoll=cerRpdNameStatusPoll)
mibBuilder.exportSymbols("ARRIS-CER-RPHY-MIB", cerRpdUsOfdmaPreambleResponseSymbolsPerFrame=cerRpdUsOfdmaPreambleResponseSymbolsPerFrame, cerRpdDsOfdmChanRpdIndex=cerRpdDsOfdmChanRpdIndex, cerRphyL2TPv3RetryCount=cerRphyL2TPv3RetryCount, cerRphyMib=cerRphyMib, cerRphySessionInfoCoreCCID=cerRphySessionInfoCoreCCID, cerRpdNameSsdEnable=cerRpdNameSsdEnable, cerRphySessionInfoIpAddrType=cerRphySessionInfoIpAddrType, cerRpdDsExclRpdRfPortId=cerRpdDsExclRpdRfPortId, cerRpdChanSelectorMacIfIndex=cerRpdChanSelectorMacIfIndex, cerRpdEnetDiagsTemp=cerRpdEnetDiagsTemp, cerRphyAuxCoreIpAddr=cerRphyAuxCoreIpAddr, cerRpdUsRfPortEntry=cerRpdUsRfPortEntry, cerRpdShelfSerialNumber=cerRpdShelfSerialNumber, cerRpdL2Tpv3TunnelInfoEntry=cerRpdL2Tpv3TunnelInfoEntry, cerRpdDsStatsRpdIndex=cerRpdDsStatsRpdIndex, cerRpdMacAddr=cerRpdMacAddr, cerRpdUsScQamIucResponseEntry=cerRpdUsScQamIucResponseEntry, cerRphyVspTable=cerRphyVspTable, cerRpdDataShelfSerialNumber=cerRpdDataShelfSerialNumber, cerRpdDataTable=cerRpdDataTable, cerRphyUsOfdmaTmpltFineRngPreambleOffset=cerRphyUsOfdmaTmpltFineRngPreambleOffset, cerRpdUsScQamIucResponseLength=cerRpdUsScQamIucResponseLength, cerRpdUsScQamIucResponseOffset=cerRpdUsScQamIucResponseOffset, cerOobNdfDsChanSrcIpAddrType=cerOobNdfDsChanSrcIpAddrType, cerRpdShelfEntityIndex=cerRpdShelfEntityIndex, cerRphyAuxCoreAddrType=cerRphyAuxCoreAddrType, cerRpdDsRfPortTiltMaxFreq=cerRpdDsRfPortTiltMaxFreq, cerRpdSsdCvcSerialNumber=cerRpdSsdCvcSerialNumber, cerRpdDsOfdmChanEntry=cerRpdDsOfdmChanEntry, cerRphyCwToneRowStatus=cerRphyCwToneRowStatus, cerRphySessionInfoEntry=cerRphySessionInfoEntry, cerRpdSsdAddrType=cerRpdSsdAddrType, CerRpdName=CerRpdName, cerRpdUsExclLowFreq=cerRpdUsExclLowFreq, cerRphyCwTonePowerAdj=cerRphyCwTonePowerAdj, cerRpdAdpLldpPortStatusPortSubType=cerRpdAdpLldpPortStatusPortSubType, cerRphySessionInfoLastChangeTime=cerRphySessionInfoLastChangeTime, cerRpdDsPowerFineAdjRpdChanIfIndex=cerRpdDsPowerFineAdjRpdChanIfIndex, cerRpdUsScQamIucResponseGuardTime=cerRpdUsScQamIucResponseGuardTime, cerRpdDsScQamCoreChanIfIndex=cerRpdDsScQamCoreChanIfIndex, cerRphyUsOfdmaTmpltRandomizationSeed=cerRphyUsOfdmaTmpltRandomizationSeed, cerRphyUsOfdmaConfigPreambleIndex=cerRphyUsOfdmaConfigPreambleIndex, cerRphyLocalConfigFilePresent=cerRphyLocalConfigFilePresent, cerRpdAuxCoreStatusRpdIndex=cerRpdAuxCoreStatusRpdIndex, cerRphySessionInfoTable=cerRphySessionInfoTable, cerRpdUsScQamSuperstringResponseGroup=cerRpdUsScQamSuperstringResponseGroup, cerRpdHwToSwModelRowStatus=cerRpdHwToSwModelRowStatus, cerRpdAdpLldpPortStatusAdpHopCnt=cerRpdAdpLldpPortStatusAdpHopCnt, cerRpdChanImpairedRpdIndex=cerRpdChanImpairedRpdIndex, cerPnmCmtsUtscCfgStaticPwSessionId=cerPnmCmtsUtscCfgStaticPwSessionId, cerRpdDsStatsRfPortId=cerRpdDsStatsRfPortId, cerRphyL2TPv3ConnectionSetupTimeout=cerRphyL2TPv3ConnectionSetupTimeout, cerRphyVspSetting=cerRphyVspSetting, cerRphyTrapsInfo=cerRphyTrapsInfo, cerOob551DsAddrToChanDsIfIndex=cerOob551DsAddrToChanDsIfIndex, cerRpdSsdCvcCaCert=cerRpdSsdCvcCaCert, cerRpdSessionInfoEnetPortIndex=cerRpdSessionInfoEnetPortIndex, cerRpdDsOfdmChanRpdChanIfIndex=cerRpdDsOfdmChanRpdChanIfIndex, cerRpdCwToneRowStatus=cerRpdCwToneRowStatus, cerRphyHighMcastIpAddr=cerRphyHighMcastIpAddr, cerOob551DsAddrToChanDestIpAddr=cerOob551DsAddrToChanDestIpAddr, cerRpdDsOfdmChanDataPwId=cerRpdDsOfdmChanDataPwId, cerRpdSessionInfoErrorCode=cerRpdSessionInfoErrorCode, cerL2Tpv3TunnelInfoRpdIndex=cerL2Tpv3TunnelInfoRpdIndex, cerRpdAdpLldpPortStatusAdpState=cerRpdAdpLldpPortStatusAdpState, cerRpdChanSelectorRpdIndex=cerRpdChanSelectorRpdIndex, cerRphyVspSelector=cerRphyVspSelector, cerDsRfPortFnRpdIndex=cerDsRfPortFnRpdIndex, cerL2Tpv3TunnelInfoRpdEnetPortIndex=cerL2Tpv3TunnelInfoRpdEnetPortIndex, cerRpdUsRfPortTable=cerRpdUsRfPortTable, cerOobNdrUsChanCenterFreq=cerOobNdrUsChanCenterFreq, cerRpdSessionInfoPwStatus=cerRpdSessionInfoPwStatus, cerRphySessionInfoSessionId=cerRphySessionInfoSessionId, cerRpdL2Tpv3TunnelInfoUnknownPwPkts=cerRpdL2Tpv3TunnelInfoUnknownPwPkts, cerRpdUsChanRpdChanSelector=cerRpdUsChanRpdChanSelector, cerRphyLocalConfigFileErased=cerRphyLocalConfigFileErased, cerRpdIfIndex=cerRpdIfIndex, cerOob551DsAddrToChanOmIpAddr=cerOob551DsAddrToChanOmIpAddr, cerRpdUsRfPortSfLevel=cerRpdUsRfPortSfLevel, cerRpdDataNumUsPorts=cerRpdDataNumUsPorts, cerRpdDsOfdmChanCoreChanIfIndex=cerRpdDsOfdmChanCoreChanIfIndex, cerCoreChanToRpdChanCoreIfIndex=cerCoreChanToRpdChanCoreIfIndex, cerRpdDataSwVersion=cerRpdDataSwVersion, cerRpdDataPnmCapabUtscNumSacs=cerRpdDataPnmCapabUtscNumSacs, cerRphyVspVendorOid=cerRphyVspVendorOid, cerRpdDataSysUpTime=cerRpdDataSysUpTime, cerRpdAdpLldpPortStatusEntry=cerRpdAdpLldpPortStatusEntry, cerRpdDataAdpSavedPreferredPort=cerRpdDataAdpSavedPreferredPort, cerRpdAdpLldpPortStatusEnetPortNum=cerRpdAdpLldpPortStatusEnetPortNum, cerRphyUsOfdmaConfigPreambleTable=cerRphyUsOfdmaConfigPreambleTable, cerRpdMacAddrTable=cerRpdMacAddrTable, cerDsGrpToCoreChanEntry=cerDsGrpToCoreChanEntry, cerRpdDsRfPortMeasuredPower=cerRpdDsRfPortMeasuredPower, cerRpdAuxCoreIpAddr=cerRpdAuxCoreIpAddr, cerRphyMaxMulticastSessionId=cerRphyMaxMulticastSessionId, cerRpdAdpLldpPortStatusNbrMacAddr=cerRpdAdpLldpPortStatusNbrMacAddr, cerRpdEvPriority=cerRpdEvPriority, cerRpdNameDcamCardId=cerRpdNameDcamCardId, cerRpdIfCounterDiscontinuityTime=cerRpdIfCounterDiscontinuityTime, cerRpdSsdCvcCaIssuer=cerRpdSsdCvcCaIssuer, cerRpdSessionInfoDirection=cerRpdSessionInfoDirection, cerUnknownRpdIpAddr=cerUnknownRpdIpAddr, cerRpdNameAdminState=cerRpdNameAdminState, cerRpdIfEntry=cerRpdIfEntry, cerRphySessionInfoCreationTime=cerRphySessionInfoCreationTime, cerRphyTraps=cerRphyTraps, cerRpdL2Tpv3TunnelInfoCoreCCID=cerRpdL2Tpv3TunnelInfoCoreCCID, cerRphyMcastRevertToPrimaryInterface=cerRphyMcastRevertToPrimaryInterface, cerRpdDevCertEntry=cerRpdDevCertEntry, cerPnmCmtsUtscCfgIndex=cerPnmCmtsUtscCfgIndex, cerRpdSessionInfoOutOfSeqPkts=cerRpdSessionInfoOutOfSeqPkts, cerOob551DsAddrToChanAddrType=cerOob551DsAddrToChanAddrType, cerOobNdfDsChanWidth=cerOobNdfDsChanWidth, cerRpdDsOfdmChanRpdDepiChanId=cerRpdDsOfdmChanRpdDepiChanId, cerRpdDataDevIdUsBurstRcvrModelNum=cerRpdDataDevIdUsBurstRcvrModelNum, CerRpdIndexOrZero=CerRpdIndexOrZero, cerRpdUsExclRowStatus=cerRpdUsExclRowStatus, cerRpdUsScQamSuperstringResponseRpdIndex=cerRpdUsScQamSuperstringResponseRpdIndex, cerCoreChanToRpdChanDirection=cerCoreChanToRpdChanDirection, cerRpdSsdCvcCaSerialNumber=cerRpdSsdCvcCaSerialNumber, cerRpdUsChanDataPwId=cerRpdUsChanDataPwId, cerRpdL2Tpv3TunnelInfoRpdIndex=cerRpdL2Tpv3TunnelInfoRpdIndex, cerRpdSsdServerIpAddr=cerRpdSsdServerIpAddr, cerRpdSsdCvcSubject=cerRpdSsdCvcSubject, cerRpdDsExclHighFreq=cerRpdDsExclHighFreq, cerRphyL2TPv3Mtu=cerRphyL2TPv3Mtu, cerRpdDsExclRpdIndex=cerRpdDsExclRpdIndex, cerRpdDevCertTable=cerRpdDevCertTable, cerRpdDataLocationLongitude=cerRpdDataLocationLongitude, cerRpdIfErrors=cerRpdIfErrors, cerRphyCwToneUsesDedicatedGen=cerRphyCwToneUsesDedicatedGen, cerRpdShelfRpdIndex=cerRpdShelfRpdIndex, cerRphySessionInfoErrorCode=cerRphySessionInfoErrorCode, cerRpdAuxCoreStatusAddrType=cerRpdAuxCoreStatusAddrType, cerFnDsRfPortFnName=cerFnDsRfPortFnName, cerRpdUsOfdmaPreambleResponseGroup=cerRpdUsOfdmaPreambleResponseGroup, cerRpdSessionInfoCoreSessionId=cerRpdSessionInfoCoreSessionId, cerRphyL2TPv3HelloInterval=cerRphyL2TPv3HelloInterval, cerRphySessionInfoRpdLcceIpAddr=cerRphySessionInfoRpdLcceIpAddr, cerVideoRpdDsRfPortRpdGrpName=cerVideoRpdDsRfPortRpdGrpName, cerRphyUsScQamModPreambleRowStatus=cerRphyUsScQamModPreambleRowStatus, cerRpdUsRfPortRpdRfPortId=cerRpdUsRfPortRpdRfPortId, cerRpdDevCertIssuerCaCertIndex=cerRpdDevCertIssuerCaCertIndex, cerRpdToCoreChanEntry=cerRpdToCoreChanEntry, cerUnknownRpdMacAddr=cerUnknownRpdMacAddr, cerRphyAuxCoreFailure=cerRphyAuxCoreFailure, cerOobRpdUsRfPortRpdPortId=cerOobRpdUsRfPortRpdPortId, cerRpdIfRpdIndex=cerRpdIfRpdIndex, cerOobNdrUsChanSrcIpAddr=cerOobNdrUsChanSrcIpAddr, cerRpdChanSelectorDepiChanId=cerRpdChanSelectorDepiChanId, cerRpdSsdEnabled=cerRpdSsdEnabled, cerPnmCmtsUtscCfgStaticPwSrcIpAddr=cerPnmCmtsUtscCfgStaticPwSrcIpAddr, cerRpdGlobalEvReporting=cerRpdGlobalEvReporting, cerRpdSessionInfoSessionSubtype=cerRpdSessionInfoSessionSubtype, cerRpdChanSelectorTable=cerRpdChanSelectorTable, cerRpdSessionInfoSessionType=cerRpdSessionInfoSessionType, cerRpdNameAdpEnabled=cerRpdNameAdpEnabled, cerRpdUsOfdmaResponsePreambleInitRngOffset=cerRpdUsOfdmaResponsePreambleInitRngOffset, cerRpdChanImpairedIfIndex=cerRpdChanImpairedIfIndex, cerRpdAuxCoreStatusIpAddr=cerRpdAuxCoreStatusIpAddr, cerRpdUsScQamIucResponseScramblerSeed=cerRpdUsScQamIucResponseScramblerSeed, cerRpdDataAdpNonOptimal=cerRpdDataAdpNonOptimal, cerRphyEnetPortAddrTimeout=cerRphyEnetPortAddrTimeout, cerCoreChanToRpdChanTable=cerCoreChanToRpdChanTable, cerFnUsRfPortFnName=cerFnUsRfPortFnName, cerFnDsRfPortEntry=cerFnDsRfPortEntry, cerRphySessionInfoPwStatus=cerRphySessionInfoPwStatus, cerOobNdrUsChanDstIpAddr=cerOobNdrUsChanDstIpAddr, cerRpdUsScQamIucResponseTable=cerRpdUsScQamIucResponseTable, cerRpdIndexRpdIndex=cerRpdIndexRpdIndex, cerRpdUsExclRpdIndex=cerRpdUsExclRpdIndex, cerRphyMinMulticastSessionId=cerRphyMinMulticastSessionId, cerRpdAuxCoreStatusFailureType=cerRpdAuxCoreStatusFailureType, cerRpdUsRfPortBasePowerLevel=cerRpdUsRfPortBasePowerLevel, cerRpdDsStatsTable=cerRpdDsStatsTable, cerRpdSsdFileName=cerRpdSsdFileName, cerRphySessionInfoRpdIndex=cerRphySessionInfoRpdIndex, cerRphySessionInfoCoreLcceIpAddr=cerRphySessionInfoCoreLcceIpAddr, cerRpdAdpLldpPortStatusChassisSubType=cerRpdAdpLldpPortStatusChassisSubType, cerRphyEnable=cerRphyEnable, cerRpdUsScQamPreambleResponseSuperstring=cerRpdUsScQamPreambleResponseSuperstring, cerRpdEvControlTable=cerRpdEvControlTable, cerL2Tpv3TunnelInfoUnknownPwPkts=cerL2Tpv3TunnelInfoUnknownPwPkts, cerRpdDataDevIdUsBurstRcvrVendorId=cerRpdDataDevIdUsBurstRcvrVendorId, cerRpdDsStatsIfIndex=cerRpdDsStatsIfIndex, cerRpdChanSelectorValue=cerRpdChanSelectorValue, cerPnmCmtsUtscCfgStaticPwDestIpAddr=cerPnmCmtsUtscCfgStaticPwDestIpAddr, cerOobNdfDsChanDataPwId=cerOobNdfDsChanDataPwId, cerRphyUsScQamConfigPreambleTable=cerRphyUsScQamConfigPreambleTable, cerRpdUsScQamPreambleResponseTimestamp=cerRpdUsScQamPreambleResponseTimestamp, cerVideoRpdDsRfPortRpdIndex=cerVideoRpdDsRfPortRpdIndex, cerRpdNameAdpIntervalTime=cerRpdNameAdpIntervalTime, cerRpdHwToSwModelVendorId=cerRpdHwToSwModelVendorId, cerRpdDataSupportsAdp=cerRpdDataSupportsAdp, cerRpdAdpLldpPortStatusTable=cerRpdAdpLldpPortStatusTable, cerRpdIfOperStatus=cerRpdIfOperStatus, cerRphyHistoryLogSize=cerRphyHistoryLogSize, cerRphyStatsGroup=cerRphyStatsGroup, cerRpdSsdManufCvcIndex=cerRpdSsdManufCvcIndex, cerRpdCwToneTable=cerRpdCwToneTable, cerUsRfPortFnRpdPortId=cerUsRfPortFnRpdPortId, cerRphyCwToneTable=cerRphyCwToneTable, cerRpdDsOfdmChanRpdPlcChanSelector=cerRpdDsOfdmChanRpdPlcChanSelector, cerRpdSessionInfoRpdMtu=cerRpdSessionInfoRpdMtu, cerRpdGlobalEvControlTable=cerRpdGlobalEvControlTable, cerRphyUsOfdmaConfigPreambleDescription=cerRphyUsOfdmaConfigPreambleDescription, cerRpdUsScQamIucResponseModType=cerRpdUsScQamIucResponseModType, cerRpdDsRfPortBasePower=cerRpdDsRfPortBasePower, cerRphyConfigFileProcessingStatus=cerRphyConfigFileProcessingStatus, cerPnmCmtsUtscCfgEntry=cerPnmCmtsUtscCfgEntry, cerRphyRpdJitterBufDepth=cerRphyRpdJitterBufDepth, cerRpdUsExclHighFreq=cerRpdUsExclHighFreq, PYSNMP_MODULE_ID=cerRphyMib, cerRpdDataLocationLatitude=cerRpdDataLocationLatitude, cerRpdDsRfPortRpdIndex=cerRpdDsRfPortRpdIndex, cerCoreChanToRpdChanRpdIfIndex=cerCoreChanToRpdChanRpdIfIndex, cerOobRpdUsRfPortRpdIndex=cerOobRpdUsRfPortRpdIndex, cerRpdDataPnmCapabUpcMaxNumSymbols50Khz=cerRpdDataPnmCapabUpcMaxNumSymbols50Khz, cerRpdHwToSwModelHwModelNum=cerRpdHwToSwModelHwModelNum, cerRphyTargetPowerAdjRowStatus=cerRphyTargetPowerAdjRowStatus, cerRpdSsdModel=cerRpdSsdModel, cerRpdNameAdpHdTimeout=cerRpdNameAdpHdTimeout, cerRpdNameCinLatency=cerRpdNameCinLatency, cerRpdUsExclTable=cerRpdUsExclTable, cerRpdAdpLldpPortStatusPortId=cerRpdAdpLldpPortStatusPortId, cerL2Tpv3TunnelInfoTable=cerL2Tpv3TunnelInfoTable, cerRpdEnetDiagsEthPortIndex=cerRpdEnetDiagsEthPortIndex, cerRpdNameTable=cerRpdNameTable, cerRpdSsdTransportType=cerRpdSsdTransportType, cerRpdUsOfdmaPreambleResponseRpdIndex=cerRpdUsOfdmaPreambleResponseRpdIndex, cerRpdEnetDiagsEntry=cerRpdEnetDiagsEntry, CerRpdIndex=CerRpdIndex, cerRpdUsChanCoreChanIfIndex=cerRpdUsChanCoreChanIfIndex, cerRpdShelfSlot=cerRpdShelfSlot, cerRpdAuxCoreStatusEntry=cerRpdAuxCoreStatusEntry, cerRpdL2Tpv3TunnelInfoIpAddrType=cerRpdL2Tpv3TunnelInfoIpAddrType, cerRpdUsExclEntry=cerRpdUsExclEntry, cerFnDsRfPortRpdPortId=cerFnDsRfPortRpdPortId, cerRpdToCoreChanTable=cerRpdToCoreChanTable, cerRpdToCoreChanCoreIfIndex=cerRpdToCoreChanCoreIfIndex, cerRphySessionInfoChanType=cerRphySessionInfoChanType, cerPnmCmtsUtscCfgTable=cerPnmCmtsUtscCfgTable, cerRphySessionInfoDirection=cerRphySessionInfoDirection, cerRphyUsScQamConfigPreambleIndex=cerRphyUsScQamConfigPreambleIndex, cerRpdNameEntry=cerRpdNameEntry, cerOobNdrUsChanChanSelector=cerOobNdrUsChanChanSelector, cerRpdL2Tpv3TunnelInfoCoreIpAddr=cerRpdL2Tpv3TunnelInfoCoreIpAddr, cerRphyMcastBackupInterface=cerRphyMcastBackupInterface, PwErrorCode=PwErrorCode, cerRpdToCoreChanDirection=cerRpdToCoreChanDirection, cerRpdDataPnmCapabSupportedPnmTests=cerRpdDataPnmCapabSupportedPnmTests, cerRpdAuxCoreStatusResult=cerRpdAuxCoreStatusResult, cerRpdChanImpairedEntry=cerRpdChanImpairedEntry, cerRpdSsdRowStatus=cerRpdSsdRowStatus)
mibBuilder.exportSymbols("ARRIS-CER-RPHY-MIB", cerRpdDataGcpProtocolVersion=cerRpdDataGcpProtocolVersion, cerRphyUsOfdmaTmpltInitRngPreambleOffset=cerRphyUsOfdmaTmpltInitRngPreambleOffset, cerRpdNameMacAddr=cerRpdNameMacAddr, cerOob551DsAddrToChanEntry=cerOob551DsAddrToChanEntry, cerRpdToCoreChanRpdIfIndex=cerRpdToCoreChanRpdIfIndex, cerRpdEvRpdIndex=cerRpdEvRpdIndex, cerOobNdrUsChanTable=cerOobNdrUsChanTable, cerRphyTargetPowerAdjPowerLevel=cerRphyTargetPowerAdjPowerLevel, cerRpdEnetDiagsRxPower=cerRpdEnetDiagsRxPower, cerRphyTargetPowerAdjChanIfIndex=cerRphyTargetPowerAdjChanIfIndex, cerRpdDsRfPortEntry=cerRpdDsRfPortEntry, cerRpdDataIpAddrType=cerRpdDataIpAddrType, cerRpdDsRfPortTilt=cerRpdDsRfPortTilt, cerRpdUsOfdmaPreambleResponseCyclicPrefix=cerRpdUsOfdmaPreambleResponseCyclicPrefix, cerRpdUsOfdmaPreambleResponseRandomizationSeed=cerRpdUsOfdmaPreambleResponseRandomizationSeed, cerRpdUsRfPortRpdIndex=cerRpdUsRfPortRpdIndex, cerRpdUsChanRpdChanIfIndex=cerRpdUsChanRpdChanIfIndex, cerRpdDataRpdIndex=cerRpdDataRpdIndex, cerRpdDsStatsEntry=cerRpdDsStatsEntry, cerDsGrpToCoreChanRpdGrpName=cerDsGrpToCoreChanRpdGrpName, cerRpdUsOfdmaQueryControlTmpltIndex=cerRpdUsOfdmaQueryControlTmpltIndex, cerRphyUsScQamModPreambleTable=cerRphyUsScQamModPreambleTable, cerRphyMaxSsdAttempts=cerRphyMaxSsdAttempts, cerRpdUsRfPortRowstatus=cerRpdUsRfPortRowstatus, cerRpdDsScQamDataPwId=cerRpdDsScQamDataPwId, cerRpdToCoreChanRpdIndex=cerRpdToCoreChanRpdIndex, cerRphyLowMcastIpAddr=cerRphyLowMcastIpAddr, cerRphyUsScQamConfigPreambleSuperstring=cerRphyUsScQamConfigPreambleSuperstring, cerRpdChanImpairedRpdIfIndex=cerRpdChanImpairedRpdIfIndex, cerRpdIndexRpdName=cerRpdIndexRpdName, cerRpdUsOfdmaPreambleResponseSuperstring=cerRpdUsOfdmaPreambleResponseSuperstring, cerRpdSessionInfoCoreIpAddr=cerRpdSessionInfoCoreIpAddr, cerDsRfPortVideoRpdIndex=cerDsRfPortVideoRpdIndex, cerRpdNameDescription=cerRpdNameDescription, cerRpdSsdCvcEntry=cerRpdSsdCvcEntry, cerRpdDsScQamRpdIndex=cerRpdDsScQamRpdIndex, cerL2Tpv3TunnelInfoCoreCCID=cerL2Tpv3TunnelInfoCoreCCID, cerRpdDsRfPortTable=cerRpdDsRfPortTable, cerFnUsRfPortRowStatus=cerFnUsRfPortRowStatus, cerRpdCwToneRpdIndex=cerRpdCwToneRpdIndex, cerRpdDataMacAddr=cerRpdDataMacAddr, cerVideoRpdDsRfPortTable=cerVideoRpdDsRfPortTable, cerRphyUsScQamConfigPreambleEntry=cerRphyUsScQamConfigPreambleEntry, cerRpdSessionInfoLastChangeTime=cerRpdSessionInfoLastChangeTime, cerRpdDataSerialNum=cerRpdDataSerialNum, cerRpdDataBootVersion=cerRpdDataBootVersion, cerRpdDataAdpForward=cerRpdDataAdpForward, cerRpdSsdCvcStatus=cerRpdSsdCvcStatus, cerRpdDsPowerFineAdjRowStatus=cerRpdDsPowerFineAdjRowStatus, cerRpdSsdEntry=cerRpdSsdEntry, cerRpdSessionInfoCreationTime=cerRpdSessionInfoCreationTime, cerRphyIpAddrType=cerRphyIpAddrType, cerOobNdrUsChanWidth=cerOobNdrUsChanWidth, cerRpdMacAddrEntry=cerRpdMacAddrEntry, cerRpdDataDevIdUsBurstRcvrDrivVer=cerRpdDataDevIdUsBurstRcvrDrivVer, cerRphySessionInfoOutOfSeqPkts=cerRphySessionInfoOutOfSeqPkts, cerRphyEvThrottleAdminStatus=cerRphyEvThrottleAdminStatus, cerDsGrpToCoreChanIfIndex=cerDsGrpToCoreChanIfIndex, cerRpdIfLastChange=cerRpdIfLastChange, cerL2Tpv3TunnelInfoRpdEnetPortGcp=cerL2Tpv3TunnelInfoRpdEnetPortGcp, cerRpdDataGcpSchemaVersion=cerRpdDataGcpSchemaVersion)
